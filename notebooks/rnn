{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Attention!\n",
    "\n",
    "Author: Justin Tan\n",
    "\n",
    "RNN model with attention mechanism for rare decay identification in TensorFlow. See Bahdanau et. al (2016) and Yang et. al (2016)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import time, os\n",
    "\n",
    "class config(object):\n",
    "    # Set network parameters\n",
    "    # Empirically, depth more important than layer size - output dimension\n",
    "    mode = 'kst'\n",
    "    channel = 'rho0'\n",
    "    n_particles = 5\n",
    "    n_features = 100\n",
    "    seq_length = n_features/n_particles\n",
    "    rnn_cell = 'gru' # 'gru'\n",
    "    hidden_units = 256  # Number of neurons per RNN Cell\n",
    "    keep_prob = 1.0\n",
    "    input_keep_prob = 0.97\n",
    "    recurrent_keep_prob = 0.97\n",
    "    num_epochs = 256\n",
    "    batch_size = 128\n",
    "    num_layers = 2 # Note: 3 layers is considered 'deep'\n",
    "    learning_rate = 1e-4\n",
    "    lr_epoch_decay = 0.999\n",
    "    ema_decay = 0.999\n",
    "    n_classes = 2\n",
    "    attention_dim = 512\n",
    "\n",
    "class directories(object):\n",
    "    data = 'data'\n",
    "    tensorboard = 'tensorboard'\n",
    "    checkpoints = 'checkpoints'\n",
    "    samples = 'samples'\n",
    "    \n",
    "architecture = '{} - {} | Base cell: {} | Hidden units: {} | Layers: {} | Batch: {} | Epochs: {}'.format(\n",
    "    config.channel, config.mode, config.rnn_cell, config.hidden_units, config.num_layers, config.batch_size, config.num_epochs)\n",
    "\n",
    "class reader():\n",
    "    def __init__(self, df):\n",
    "        \n",
    "        self.df = df\n",
    "        self.batch_size = config.batch_size\n",
    "        self.steps_per_epoch = len(df) // config.batch_size\n",
    "        self.epochs = 0\n",
    "        self.proceed = True\n",
    "        self.shuffle()\n",
    "\n",
    "    def shuffle(self):\n",
    "        self.df = self.df.sample(frac=1).reset_index(drop=True)\n",
    "        self.df_X = self.df.drop('Labels', axis = 1)\n",
    "        self.df_y = self.df['Labels']\n",
    "        self.pointer = 0\n",
    "\n",
    "    def next_batch(self, batch_size):\n",
    "        if self.pointer + 1 >= self.steps_per_epoch:\n",
    "            inputs = self.df_X.iloc[self.pointer*batch_size:]\n",
    "            targets = self.df_y.iloc[self.pointer*batch_size:]\n",
    "            self.epochs += 1\n",
    "            self.shuffle()\n",
    "            self.proceed = False\n",
    "            \n",
    "        inputs = self.df_X.iloc[self.pointer*batch_size:(self.pointer+1)*batch_size]\n",
    "        targets = self.df_y.iloc[self.pointer*batch_size:(self.pointer+1)*batch_size]\n",
    "        self.pointer += 1\n",
    "                \n",
    "        return inputs, targets\n",
    "\n",
    "def save_summary(config, delta_t, train_acc, test_acc):\n",
    "    import json\n",
    "    summary = {\n",
    "        'Timestamp': time.strftime('%c'),\n",
    "        'Base cell': config.rnn_cell,\n",
    "        'Hidden units': config.hidden_units,\n",
    "        'Layers': config.num_layers,\n",
    "        'Batch_size': config.batch_size,\n",
    "        'Seq_length': config.seq_length,\n",
    "        'Dropout': config.keep_prob,\n",
    "        'Epochs': config.num_epochs,\n",
    "        'Time': delta_t,\n",
    "        'Final train acc': train_acc,\n",
    "        'Final test acc': test_acc\n",
    "    }\n",
    "    # Writing JSON data\n",
    "    if os.path.isfile('rnn_summary.json'):\n",
    "        with open('rnn_summary_{}.json.format(config.name)', 'r+') as f:\n",
    "            new = json.load(f)\n",
    "        new.append(summary)\n",
    "        with open('rnn_summary.json', 'w') as f:\n",
    "            json.dump(new, f, indent = 4)\n",
    "    else:\n",
    "        with open('rnn_summary.json', 'w') as f:\n",
    "             json.dump([summary], f, indent = 4)\n",
    "                \n",
    "def load_data(file_name, test_size = 0.05):\n",
    "    from sklearn.model_selection import train_test_split\n",
    "    df = pd.read_hdf(file_name, 'df')\n",
    "    df_X_train, df_X_test, df_y_train, df_y_test = train_test_split(df.drop('Labels', axis = 1),\n",
    "                                                                    df['Labels'], test_size = test_size, random_state=42)\n",
    "    return df_X_train, df_X_test, df_y_train, df_y_test\n",
    "\n",
    "def p_ordering(df, ascending = True):\n",
    "    # Drop errors, order particles by momentum descending\n",
    "    df = df.drop([column for column in df.columns if column.endswith('Err')], axis = 1)\n",
    "    Labels = df['Labels']\n",
    "    blocks = np.split(df.drop('Labels', axis = 1), config.n_particles, axis = 1)\n",
    "    cols_p = [column for column in df.columns if column.endswith('cms_p')]\n",
    "    p_mean = [df[column].mean() for column in cols_p]\n",
    "    if ascending:\n",
    "        p_ordered_frames = [blocks[i] for i in np.argsort(p_mean)]\n",
    "    else:\n",
    "        p_ordered_frames = [blocks[i] for i in np.argsort(p_mean)[::-1]]\n",
    "        \n",
    "    p_ordered_frames.append(Labels)\n",
    "    df_p_ordered = pd.concat(p_ordered_frames, axis = 1)\n",
    "    return df_p_ordered\n",
    "\n",
    "def plot_ROC_curve(network_output, y_true, meta = ''):\n",
    "#     import matplotlib as mpl\n",
    "#     mpl.use('pgf')\n",
    "    import matplotlib.pyplot as plt\n",
    "    import seaborn as sns\n",
    "    from sklearn.metrics import roc_curve, auc\n",
    "    y_score = network_output[:,1]\n",
    "    \n",
    "    # Compute ROC curve, integrate\n",
    "    fpr, tpr, thresholds = roc_curve(y_true, y_score)    \n",
    "    roc_auc = auc(fpr, tpr)\n",
    "    \n",
    "    plt.figure()\n",
    "    plt.axes([.1,.1,.8,.7])\n",
    "    plt.figtext(.5,.9, r'Receiver Operating Characteristic', fontsize=15, ha='center')\n",
    "    plt.figtext(.5,.85, meta, fontsize=10,ha='center')\n",
    "    plt.plot(fpr, tpr, color='darkorange',\n",
    "                     lw=2, label='ROC (area = %0.2f)' % roc_auc)\n",
    "    plt.plot([0, 1], [0, 1], color='navy', lw=1.0, linestyle='--')\n",
    "    plt.xlim([-0.05, 1.05])\n",
    "    plt.ylim([-0.05, 1.05])\n",
    "    plt.xlabel(r'False Positive Rate')\n",
    "    plt.ylabel(r'True Positive Rate')\n",
    "    plt.legend(loc=\"lower right\")\n",
    "    plt.savefig(os.path.join('graphs', '{}_{}_ROC.pdf'.format(config.channel, config.mode)), format='pdf', dpi=1000)\n",
    "    #plt.savefig(os.path.join('graphs', '{}_{}_ROC.pgf'.format(config.channel, config.mode)), format='pgf', dpi=1000)\n",
    "    print('AUC: {:.4f}'.format(roc_auc))\n",
    "    plt.show()\n",
    "    plt.gcf().clear()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def attention_A(annotations, attention_dim, feedforward = True, my_method = True):\n",
    "    \n",
    "    sequence_length = annotations.get_shape()[1].value\n",
    "    hidden_units = annotations.get_shape()[2].value\n",
    "    A_re = tf.reshape(annotations, [-1, hidden_units])\n",
    "\n",
    "    W_ff = tf.get_variable('W_ff', shape = [hidden_units, attention_dim])\n",
    "    b_ff = tf.get_variable('b_ff', shape = [attention_dim])\n",
    "    u_context = tf.get_variable('context', shape = [attention_dim], initializer = tf.random_normal_initializer(stddev = 0.512))\n",
    "    \n",
    "    input_embedding = tf.tanh(tf.add(tf.matmul(A_re, W_ff), tf.reshape(b_ff, [1,-1])))\n",
    "    energy = tf.matmul(input_embedding, tf.expand_dims(u_context,1))\n",
    "    attention_energy = tf.reshape(energy, [-1, sequence_length])\n",
    "    p = tf.nn.softmax(attention_energy)\n",
    "    D = tf.matrix_diag(p)\n",
    "    \n",
    "    # Compute weighted sum of annotations\n",
    "    if my_method:\n",
    "        output = tf.reduce_sum(tf.matmul(D, annotations), 1)\n",
    "    else:\n",
    "        output = tf.reduce_sum(annotations * tf.reshape(p, [-1, sequence_length, 1]), 1)\n",
    "        \n",
    "    return output\n",
    "\n",
    "def attention_B(annotations, attention_dim, feedforward = True, my_method = True):\n",
    "    \n",
    "    sequence_length = annotations.get_shape()[1].value\n",
    "    hidden_units = annotations.get_shape()[2].value\n",
    "    B_re = tf.reshape(annotations, [hidden_units, -1])\n",
    "\n",
    "    W_ff = tf.get_variable('W_ff', shape = [attention_dim, hidden_units])\n",
    "    b_ff = tf.get_variable('b_ff', shape = [attention_dim])\n",
    "    u_context = tf.get_variable('context', shape = [attention_dim], initializer = tf.random_normal_initializer(stddev = 0.512))\n",
    "    \n",
    "    prod = tf.matmul(W_ff, B_re)\n",
    "    b_ff_tiled = tf.tile(tf.expand_dims(b_ff,1), [1,prod.shape[1].value])\n",
    "    \n",
    "    input_embedding = tf.tanh(tf.add(prod, b_ff_tiled))\n",
    "    energy = tf.matmul(tf.transpose(tf.expand_dims(u_context,1)), input_embedding)\n",
    "    energy = tf.reshape(energy, [-1, sequence_length])\n",
    "\n",
    "    p = tf.nn.softmax(energy)\n",
    "    D = tf.matrix_diag(p)\n",
    "    \n",
    "    # Compute weighted sum of annotations\n",
    "    if my_method:\n",
    "        output = tf.reduce_sum(tf.matmul(D, annotations), 1)\n",
    "    else:\n",
    "        output = tf.reduce_sum(annotations * tf.reshape(p, [-1, sequence_length, 1]), 1)\n",
    "        \n",
    "    return output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Read Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test_file = '/data/projects/punim0011/jtan/data/rnn/rnn_B02rho0gamma_kst.h5'\n",
    "\n",
    "df_X_train, df_X_test, df_y_train, df_y_test = load_data(test_file)\n",
    "df_train = p_ordering(pd.concat([df_X_train, df_y_train], axis = 1))\n",
    "df_test = p_ordering(pd.concat([df_X_test, df_y_test], axis = 1))\n",
    "\n",
    "config.n_features = df_train.shape[1] - 1\n",
    "config.seq_length = config.n_features//config.n_particles\n",
    "config.steps_per_epoch = len(df_X_train) // config.batch_size\n",
    "assert config.seq_length == config.n_features/config.n_particles, 'Discrepancy in input feature dimension'\n",
    "\n",
    "readerTrain = reader(df_train)\n",
    "readerTest = reader(df_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### RNN construction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def layer_weights(shape, name = 'weights'):\n",
    "    # Return weight tensor of given shape using Xavier initialization\n",
    "    W = tf.get_variable(name, shape = shape, initializer=tf.contrib.layers.xavier_initializer())\n",
    "    return W\n",
    "\n",
    "def layer_biases(shape, name = 'biases'):\n",
    "    # Return bias tensor of given shape with small initialized constant value\n",
    "    b = tf.get_variable(name, shape = shape, initializer = tf.constant_initializer(0.01))\n",
    "    return b\n",
    "\n",
    "def BN_layer_ops(x, shape, name, keep_prob, phase, activation=tf.nn.relu):\n",
    "    # High-level implementation of BN\n",
    "    with tf.variable_scope(name) as scope:\n",
    "         # scope.reuse_variables() # otherwise tf.get_variable() checks that already existing vars are not shared by accident\n",
    "        weights = layer_weights(shape = shape)\n",
    "        biases = layer_biases(shape = [shape[1]])\n",
    "        z_BN = tf.matmul(x, weights) + biases\n",
    "        \n",
    "        # Place BN transform before non-linearity - update to TF 1.2!\n",
    "        theta_BN = tf.contrib.layers.batch_norm(z_BN, center=True, scale=True,is_training=phase, \n",
    "                                                decay=0.99, zero_debias_moving_mean=True, scope='bn', fused = True)\n",
    "        BN_actv = activation(theta_BN)\n",
    "        BN_layer_output = tf.nn.dropout(BN_actv, keep_prob)\n",
    "\n",
    "    return BN_layer_output\n",
    "\n",
    "def readout_ops(x, shape, name):\n",
    "    # Don't apply non-linearity, dropout on output layer\n",
    "    with tf.variable_scope(name) as scope:\n",
    "        weights = layer_weights(shape = shape)\n",
    "        biases = layer_biases(shape = [shape[1]])\n",
    "        layer_output = tf.matmul(x, weights) + biases\n",
    "        \n",
    "    return layer_output\n",
    "\n",
    "def build_network(x, n_layers, hidden_layer_nodes, keep_prob, training_phase):\n",
    "    assert n_layers == len(hidden_layer_nodes), 'Specified layer nodes and number of layers do not correspond.'\n",
    "    layers = [x]\n",
    "    with tf.variable_scope('BN_layers') as scope:\n",
    "        hidden_1 = BN_layer_ops(x, shape = [x.get_shape()[-1], hidden_layer_nodes[0]], name = 'BNhidden0',\n",
    "                                keep_prob = keep_prob, phase = training_phase)\n",
    "        layers.append(hidden_1)\n",
    "        for n in range(0,n_layers-1):\n",
    "            hidden_n = BN_layer_ops(layers[-1], shape = [hidden_layer_nodes[n], hidden_layer_nodes[n+1]], name = 'BNhidden{}'.format(n+1),\n",
    "                                   keep_prob = keep_prob, phase = training_phase)\n",
    "            layers.append(hidden_n)\n",
    "        readout = readout_ops(layers[-1], shape = [hidden_layer_nodes[-1], config.n_classes], name = 'readout')\n",
    "        \n",
    "    return readout\n",
    "\n",
    "def extract_last_2(rnn_output, ind):\n",
    "    batch_range = tf.range(rnn_output.get_shape()[0])\n",
    "    indices = tf.stack([batch_range, ind], axis=1)\n",
    "    summary = tf.gather_nd(rnn_output, indices)\n",
    "\n",
    "    return summary\n",
    "\n",
    "def extract_axis_1(data, ind):\n",
    "    \"\"\"\n",
    "    Get specified elements along the first axis of tensor.\n",
    "    :param data: Tensorflow tensor that will be subsetted.\n",
    "    :param ind: Indices to take (one for each element along axis 0 of data).\n",
    "    :return: Subsetted tensor.\n",
    "    \"\"\"\n",
    "\n",
    "    batch_range = tf.range(tf.shape(data)[0])\n",
    "    indices = tf.stack([batch_range, ind], axis=1)\n",
    "    res = tf.gather_nd(data, indices)\n",
    "\n",
    "    return res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class BiRNN():\n",
    "    def __init__(self, config, training = True):\n",
    "        self.config = config                \n",
    "        # Placeholders for feed_dict\n",
    "        self.inputs = tf.placeholder(tf.float32, shape = [None, self.config.n_features])\n",
    "        self.targets = tf.placeholder(tf.int32, shape = [None])\n",
    "        self.keep_prob = tf.placeholder(tf.float32) # Dropout on input connections\n",
    "        self.dense_keep_prob = tf.placeholder(tf.float32) # Dropout for dense layers\n",
    "        self.training_phase = tf.placeholder(tf.bool)\n",
    "        self.global_step = tf.get_variable('global_step', [], initializer=tf.constant_initializer(0), trainable=False)\n",
    "        \n",
    "        # Reshape input to batch_size x n_particles x seq_length tensor\n",
    "        rnn_inputs = tf.reshape(self.inputs, [-1, config.n_particles, config.seq_length])\n",
    "        \n",
    "        # Choose rnn cell type\n",
    "        if config.rnn_cell == 'lstm':\n",
    "            args = {'num_units': config.hidden_units, 'forget_bias': 1.0, 'state_is_tuple': True}\n",
    "            base_cell = tf.nn.rnn_cell.LSTMCell\n",
    "        elif config.rnn_cell == 'gru':\n",
    "            args = {'num_units': config.hidden_units}\n",
    "            base_cell = tf.nn.rnn_cell.GRUCell\n",
    "        elif config.rnn_cell == 'layer-norm':\n",
    "            args = {'num_units': config.hidden_units, 'forget_bias': 1.0, 'dropout_keep_prob': self.config.recurrent_keep_prob}\n",
    "            base_cell = tf.contrib.rnn.LayerNormBasicLSTMCell\n",
    "        else:\n",
    "            args = {'num_units': config.hidden_units, 'forget_bias': 1.0, 'dropout_keep_prob': self.config.recurrent_keep_prob}\n",
    "            base_cell = tf.contrib.rnn.LayerNormBasicLSTMCell\n",
    "\n",
    "        self.cell = base_cell\n",
    "#         # Apply Dropout operator on non-recurrent connections, wrap stacked cells into a single cell\n",
    "#         if training and self.config.input_keep_prob < 1:\n",
    "#             rnn_inputs = tf.nn.dropout(rnn_inputs, self.keep_prob)\n",
    "#             self.multicell = tf.nn.rnn_cell.MultiRNNCell(\n",
    "#             [tf.nn.rnn_cell.DropoutWrapper(self.cell(**args), input_keep_prob = self.config.input_keep_prob) for _ in range(config.num_layers)],\n",
    "#             state_is_tuple = True)\n",
    "#         else:\n",
    "#             self.multicell = tf.nn.rnn_cell.MultiRNNCell(\n",
    "#             [self.cell(**args) for _ in range(config.num_layers)], state_is_tuple = True)\n",
    "            \n",
    "#         # Accept previous hidden state as input\n",
    "#         self.init_state = self.multicell.zero_state(self.config.batch_size, tf.float32)\n",
    "#         # Outputs shaped [batch_size, max_time, cell.output_size]\n",
    "#         rnn_outputs, final_state = tf.nn.dynamic_rnn(\n",
    "#             cell = self.multicell, inputs = rnn_inputs, initial_state = self.init_state, scope = self.scope)\n",
    "#         self.output = rnn_outputs[:,-1,:]\n",
    "        \n",
    "        if training and self.config.input_keep_prob < 1:\n",
    "            rnn_inputs = tf.nn.dropout(rnn_inputs, self.keep_prob)\n",
    "            fwd_cells = [tf.nn.rnn_cell.DropoutWrapper(\n",
    "                self.cell(**args), input_keep_prob = self.config.input_keep_prob) for _ in range(config.num_layers)]\n",
    "            bwd_cells = [tf.nn.rnn_cell.DropoutWrapper(\n",
    "                self.cell(**args), input_keep_prob = self.config.input_keep_prob) for _ in range(config.num_layers)]\n",
    "        else:\n",
    "            fwd_cells = [self.cell(**args) for _ in range(config.num_layers)]\n",
    "            bwd_cells = [self.cell(**args) for _ in range(config.num_layers)]\n",
    "        \n",
    "        fwd_init = [fwd_cell.zero_state(self.config.batch_size, tf.float32) for fwd_cell in fwd_cells]\n",
    "        bwd_init = [bwd_cell.zero_state(self.config.batch_size, tf.float32) for bwd_cell in bwd_cells]\n",
    "        \n",
    "        self.birnn_output, self.fwd_state, self.bwd_state = tf.contrib.rnn.stack_bidirectional_dynamic_rnn(\n",
    "            cells_fw = fwd_cells,\n",
    "            cells_bw = bwd_cells,\n",
    "            inputs = rnn_inputs,\n",
    "            initial_states_fw = fwd_init,\n",
    "            initial_states_bw = bwd_init,\n",
    "            sequence_length = np.ones(config.batch_size)*config.n_particles,\n",
    "            parallel_iterations = 128)\n",
    "        \n",
    "#         summary_vector = attention_A(self.birnn_output, config.attention_dim, my_method = False)\n",
    "        \n",
    "#         with tf.variable_scope('smx'):\n",
    "#             W_c = layer_weights(shape = [config.attention_dim, config.n_classes], name = 'smx_W_fwd')\n",
    "#             b_c = layer_biases(shape = [config.n_classes], name = 'smx_b')\n",
    "#             self.logits_RNN = tf.matmul(summary_vector, W_c) + b_c\n",
    "        \n",
    "#         with tf.variable_scope('softmax'):\n",
    "#             W_f = layer_weights(shape = [config.hidden_units, config.n_classes], name = 'smx_W_fwd')\n",
    "#             W_b = layer_weights(shape = [config.hidden_units, config.n_classes], name = 'smx_W_bwd')\n",
    "#             softmax_b = layer_biases(shape = [config.n_classes], name = 'smx_b')\n",
    "#             self.logits_RNN = tf.matmul(self.fwd_state[-1], W_f) + tf.matmul(self.bwd_state[-1], W_b) + softmax_b\n",
    "            \n",
    "        # Extract output from last time step\n",
    "        \n",
    "        ind = np.zeros(int(self.birnn_output.get_shape()[0])) + (config.n_particles - 1)\n",
    "        y = extract_last_2(self.birnn_output, ind)\n",
    "        output_fwd, output_bwd = tf.split(y, 2, axis = 1)\n",
    "#         outputs = tf.split(self.birnn_output, 2, axis = 2)\n",
    "#         output_fwd = outputs[0][:,-1,:]\n",
    "#         output_bwd = outputs[1][:,-1,:]\n",
    "\n",
    "        with tf.variable_scope('softmax'):\n",
    "            W_f = layer_weights(shape = [config.hidden_units, config.n_classes], name = 'smx_W_fwd')\n",
    "            W_b = layer_weights(shape = [config.hidden_units, config.n_classes], name = 'smx_W_bwd')\n",
    "            softmax_b = layer_biases(shape = [config.n_classes], name = 'smx_b')\n",
    "            self.logits_RNN = tf.matmul(output_fwd, W_f) + tf.matmul(output_bwd, W_b) + softmax_b  # Unormalized log probabilties for next char\n",
    "        \n",
    "        self.cross_entropy = tf.reduce_mean(tf.nn.sparse_softmax_cross_entropy_with_logits(logits = self.logits_RNN, labels = self.targets))\n",
    "        tf.summary.scalar('cross_entropy', self.cross_entropy)\n",
    "        \n",
    "        # Anneal learning rate\n",
    "        #learning_rate = tf.train.exponential_decay(config.learning_rate, global_step,\n",
    "        #                                               decay_steps = config.steps_per_epoch, decay_rate = config.lr_epoch_decay, staircase=True)\n",
    "        opt = tf.train.AdamOptimizer(config.learning_rate)\n",
    "        grad_var_pairs = opt.compute_gradients(self.cross_entropy)          \n",
    "        grad_var_pairs = [(tf.clip_by_value(grad, -1., 1.), var) for grad, var in grad_var_pairs]\n",
    "        \n",
    "        # Add histograms for gradients.\n",
    "        for grad, var in grad_var_pairs:\n",
    "            if grad is not None:\n",
    "                tf.summary.histogram(var.op.name + '/gradients', grad)\n",
    "                \n",
    "        self.opt_op = opt.apply_gradients(grad_var_pairs, global_step=self.global_step)\n",
    "#         self.opt_op = tf.train.AdamOptimizer(config.learning_rate).minimize(self.cross_entropy, name = 'optimizer',\n",
    "#                                                                               global_step = self.global_step)\n",
    "        \n",
    "        self.ema = tf.train.ExponentialMovingAverage(decay = config.ema_decay, num_updates = self.global_step)\n",
    "        maintain_averages_op = self.ema.apply(tf.trainable_variables())\n",
    "        \n",
    "        with tf.control_dependencies([self.opt_op]):\n",
    "            self.train_op = tf.group(maintain_averages_op)\n",
    "        \n",
    "        # Evaluate correctness\n",
    "        self.predictions = tf.nn.softmax(self.logits_RNN)\n",
    "        correct_prediction = tf.equal(tf.cast(tf.argmax(self.predictions, 1), tf.int32), self.targets)\n",
    "        self.accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\n",
    "        tf.summary.scalar('accuracy', self.accuracy)\n",
    "        self.merge_op = tf.summary.merge_all()\n",
    "    \n",
    "    def predict(self, ckpt, metaGraph = None):\n",
    "        pin_cpu = tf.ConfigProto(allow_soft_placement=True, log_device_placement=True, device_count = {'GPU':0})\n",
    "    \n",
    "        # Restore the moving average version of the learned variables for eval.\n",
    "        #variable_averages = tf.train.ExponentialMovingAverage(config.ema_decay)\n",
    "        variables_to_restore = self.ema.variables_to_restore()\n",
    "        #variables_to_restore = variable_averages.variables_to_restore()\n",
    "        saver = tf.train.Saver(variables_to_restore)\n",
    "        \n",
    "        with tf.Session(config=pin_cpu) as sess:\n",
    "            # Initialize variables\n",
    "            init_op = tf.global_variables_initializer()\n",
    "            sess.run(init_op)\n",
    "            sess.run(tf.local_variables_initializer())\n",
    "            start_time = time.time()\n",
    "            assert (ckpt.model_checkpoint_path or metaGraph), 'Missing checkpoint file!'\n",
    "            \n",
    "            if metaGraph:\n",
    "                saver = tf.train.import_meta_graph(metaGraph)\n",
    "                saver.restore(sess, os.path.splitext(metaGraph)[0])\n",
    "                print('{} restored.'.format(metaGraph))\n",
    "            else:    \n",
    "                saver.restore(sess, ckpt.model_checkpoint_path)\n",
    "                print('{} restored.'.format(ckpt.model_checkpoint_path))\n",
    "\n",
    "            # Make predictions using the trained model\n",
    "            feed_dict_test = {self.inputs: df_X_test.values, self.targets: df_y_test.values, self.keep_prob: 1.0}#, self.training_phase: False}\n",
    "            network_output_test, final_v_acc, final_v_auc = sess.run(\n",
    "                [self.prediction, self.accuracy, self.auc_op], feed_dict = feed_dict_test)\n",
    "\n",
    "            print(\"Validation accuracy: {:g}\\nValidation AUC: {:g}\".format(final_v_acc, final_v_auc))\n",
    "            \n",
    "            plot_ROC_curve(network_output = network_output_test, y_true = df_y_test.values,\n",
    "                           meta = architecture + ' | Test accuracy: {}'.format(final_v_acc))            \n",
    "            delta_t = time.time() - start_time\n",
    "            print(\"Inference complete. Duration: %g s\" %(delta_t))\n",
    "            \n",
    "            return network_output_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extract_last_2(y, ind) == extract_axis_1(y, ind)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "        outputs = tf.split(y, 2, axis = 2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<tf.Tensor 'split:0' shape=(128, 256) dtype=float32>,\n",
       " <tf.Tensor 'split:1' shape=(128, 256) dtype=float32>]"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.split(extract_axis_1(y, ind), 2, axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'strided_slice_12:0' shape=() dtype=int32>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.shape(y)[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "r = tf.range(y.get_shape()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(128,)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ind.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'stack_7:0' shape=(128, 2) dtype=int32>"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.stack([r, ind], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'stack_5:0' shape=(128, 2) dtype=int32>"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.stack([tf.range(y.get_shape()[0]), ind], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'Shape_9:0' shape=(3,) dtype=int32>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.shape(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'GatherNd_2:0' shape=(128, 512) dtype=float32>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.gather_nd(y,tf.stack([tf.range(tf.shape(y)[0]),ind], axis = 1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "ind = np.zeros(int(y.get_shape()[0])) + (config.n_particles - 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "z, inds = extract_axis_1(y, ind)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'GatherNd_3:0' shape=(128, 512) dtype=float32>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'stack_8:0' shape=(128, 2) dtype=int32>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'strided_slice_4:0' shape=(128, 512) dtype=float32>"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[:,-1,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "biRNN = BiRNN(config, training = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=biRNN.birnn_output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'stack_bidirectional_rnn/cell_1/concat:0' shape=(128, 5, 512) dtype=float32>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "y = np.random.normal(size=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Dimension(128)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.get_shape()[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'Shape_2:0' shape=(3,) dtype=int32>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.shape(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'strided_slice:0' shape=(30, 512) dtype=float32>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[:30, 4,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "128"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "config.batch_size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor 'range_1:0' shape=(128,) dtype=int32>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.range(config.batch_size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def train(config, restore = False):\n",
    "    \n",
    "    biRNN = BiRNN(config, training = True)\n",
    "    start_time = time.time()\n",
    "    v_acc_best = 0.\n",
    "    saver = tf.train.Saver()\n",
    "    train_writer = tf.summary.FileWriter(\n",
    "        os.path.join(directories.tensorboard, 'train_{}'.format(time.strftime('%d-%m_%I:%M'))), graph = tf.get_default_graph())\n",
    "    test_writer = tf.summary.FileWriter(os.path.join(directories.tensorboard, 'test_{}'.format(time.strftime('%d-%m_%I:%M'))))\n",
    "    ckpt = tf.train.get_checkpoint_state(directories.checkpoints)\n",
    "    \n",
    "    with tf.Session() as sess:\n",
    "        # Initialize variables\n",
    "        init_op = tf.global_variables_initializer()\n",
    "        sess.run(init_op)\n",
    "        \n",
    "        if restore and ckpt.model_checkpoint_path:\n",
    "            print('{} restored.'.format(ckpt.model_checkpoint_path))\n",
    "#             saver = tf.train.import_meta_graph('checkpoints/char-RNN__epoch49.ckpt-49.meta')\n",
    "#             saver.restore(sess, 'checkpoints/char-RNN__epoch49.ckpt-49')\n",
    "            saver.restore(sess, ckpt.model_checkpoint_path)\n",
    "                    \n",
    "        for epoch in range(config.num_epochs):\n",
    "            \n",
    "            readerTrain.proceed = True\n",
    "            begin = time.time()\n",
    "            step = 0\n",
    "            print('(*) Entering Epoch {} ({:.3f} s)'.format(epoch, time.time() - start_time))\n",
    "\n",
    "            # Save every 10 epochs    \n",
    "            if epoch % 10 == 0:\n",
    "                save_path = saver.save(sess,\n",
    "                                       os.path.join(directories.checkpoints,'biRNN_{}_{}_epoch{}.ckpt'.format(config.mode, config.channel, epoch)),\n",
    "                                       global_step = epoch)\n",
    "                print('Graph saved to file: {}'.format(save_path))\n",
    "\n",
    "            while(readerTrain.proceed):\n",
    "                # Iterate through entire corpus\n",
    "                x_train, y_train = readerTrain.next_batch(config.batch_size)\n",
    "                feed_dict_train = {biRNN.inputs: x_train.values, biRNN.targets: y_train.values, biRNN.keep_prob: config.keep_prob, \n",
    "                                   biRNN.training_phase: True}\n",
    "                t_op = sess.run(biRNN.train_op, feed_dict = feed_dict_train)\n",
    "                step += 1\n",
    "\n",
    "                if step % (config.steps_per_epoch // 8) == 0:            \n",
    "                    # Evaluate model\n",
    "                    improved = ''\n",
    "                    x_test, y_test = readerTest.next_batch(config.batch_size)\n",
    "                    feed_dict_test = {biRNN.inputs: x_test.values, biRNN.targets: y_test.values, \n",
    "                                      biRNN.keep_prob: 1.0, biRNN.training_phase: False}\n",
    "\n",
    "                    t_acc, t_loss, t_summary = sess.run([biRNN.accuracy, biRNN.cross_entropy, biRNN.merge_op],\n",
    "                                                        feed_dict = feed_dict_train)\n",
    "                    v_acc, v_loss, v_summary, = sess.run([biRNN.accuracy, biRNN.cross_entropy, biRNN.merge_op],\n",
    "                                                        feed_dict = feed_dict_test)\n",
    "\n",
    "                    train_writer.add_summary(t_summary, step)\n",
    "                    test_writer.add_summary(v_summary, step)\n",
    "                    \n",
    "                    if epoch > 5 and v_acc > v_acc_best:\n",
    "                        v_acc_best = v_acc\n",
    "                        improved = '*'\n",
    "                        save_path = saver.save(sess, os.path.join(directories.checkpoints, 'best.ckpt'), global_step = epoch)\n",
    "                    \n",
    "                    print('Epoch {}, Step {} | Training Accuracy: {:.3f} | Test Accuracy: {:.3f} | Training Loss: {:.3f} | Test Loss {:.3f} {}'\n",
    "                          .format(epoch, step, t_acc, v_acc, t_loss, v_loss, improved))\n",
    "\n",
    "        save_path = saver.save(sess, os.path.join(directories.checkpoints, 'biRNN_end'),\n",
    "                               global_step = epoch)\n",
    "        print('Metagraph saved to file: {}'.format(save_path))\n",
    "\n",
    "        final_train_accuracy = biRNN.accuracy.eval(feed_dict = {biRNN.inputs: df_X_train.values, biRNN.targets: df_y_train.values, \n",
    "                                                                biRNN.keep_prob: 1.0, biRNN.training_phase: False})\n",
    "        final_test_accuracy = biRNN.accuracy.eval(feed_dict = {biRNN.inputs: df_X_test.values, biRNN.targets: df_y_test.values,\n",
    "                                                               biRNN.keep_prob: 1.0, biRNN.training_phase: False})\n",
    "        delta_t = time.time() - start_time\n",
    "            \n",
    "    print(\"Training Complete. Time elapsed: {:.3f} s\".format(delta_t))\n",
    "    print(\"Train accuracy: %g\\nValidation accuracy: %g\" %(final_train_accuracy, final_test_accuracy))\n",
    "\n",
    "    print('Architecture: {}'.format(architecture))\n",
    "    save_summary(config, delta_t, final_train_accuracy, final_test_accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(*) Entering Epoch 0 (11.691 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch0.ckpt-0\n",
      "Epoch 0, Step 475 | Training Accuracy: 0.570 | Test Accuracy: 0.539 | Training Loss: 0.660 | Test Loss 0.706 \n",
      "Epoch 0, Step 950 | Training Accuracy: 0.602 | Test Accuracy: 0.703 | Training Loss: 0.635 | Test Loss 0.573 \n",
      "Epoch 0, Step 1425 | Training Accuracy: 0.656 | Test Accuracy: 0.703 | Training Loss: 0.638 | Test Loss 0.619 \n",
      "Epoch 0, Step 1900 | Training Accuracy: 0.656 | Test Accuracy: 0.641 | Training Loss: 0.598 | Test Loss 0.615 \n",
      "Epoch 0, Step 2375 | Training Accuracy: 0.602 | Test Accuracy: 0.625 | Training Loss: 0.643 | Test Loss 0.620 \n",
      "Epoch 0, Step 2850 | Training Accuracy: 0.617 | Test Accuracy: 0.688 | Training Loss: 0.595 | Test Loss 0.591 \n",
      "Epoch 0, Step 3325 | Training Accuracy: 0.633 | Test Accuracy: 0.609 | Training Loss: 0.654 | Test Loss 0.608 \n",
      "Epoch 0, Step 3800 | Training Accuracy: 0.688 | Test Accuracy: 0.750 | Training Loss: 0.578 | Test Loss 0.499 \n",
      "(*) Entering Epoch 1 (103.359 s)\n",
      "Epoch 1, Step 475 | Training Accuracy: 0.734 | Test Accuracy: 0.758 | Training Loss: 0.517 | Test Loss 0.524 \n",
      "Epoch 1, Step 950 | Training Accuracy: 0.688 | Test Accuracy: 0.734 | Training Loss: 0.601 | Test Loss 0.552 \n",
      "Epoch 1, Step 1425 | Training Accuracy: 0.711 | Test Accuracy: 0.766 | Training Loss: 0.583 | Test Loss 0.519 \n",
      "Epoch 1, Step 1900 | Training Accuracy: 0.703 | Test Accuracy: 0.672 | Training Loss: 0.547 | Test Loss 0.633 \n",
      "Epoch 1, Step 2375 | Training Accuracy: 0.672 | Test Accuracy: 0.719 | Training Loss: 0.547 | Test Loss 0.501 \n",
      "Epoch 1, Step 2850 | Training Accuracy: 0.750 | Test Accuracy: 0.750 | Training Loss: 0.525 | Test Loss 0.490 \n",
      "Epoch 1, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.703 | Training Loss: 0.438 | Test Loss 0.517 \n",
      "Epoch 1, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.758 | Training Loss: 0.458 | Test Loss 0.485 \n",
      "(*) Entering Epoch 2 (194.167 s)\n",
      "Epoch 2, Step 475 | Training Accuracy: 0.734 | Test Accuracy: 0.734 | Training Loss: 0.527 | Test Loss 0.512 \n",
      "Epoch 2, Step 950 | Training Accuracy: 0.734 | Test Accuracy: 0.688 | Training Loss: 0.499 | Test Loss 0.559 \n",
      "Epoch 2, Step 1425 | Training Accuracy: 0.750 | Test Accuracy: 0.781 | Training Loss: 0.491 | Test Loss 0.489 \n",
      "Epoch 2, Step 1900 | Training Accuracy: 0.711 | Test Accuracy: 0.758 | Training Loss: 0.551 | Test Loss 0.528 \n",
      "Epoch 2, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.766 | Training Loss: 0.438 | Test Loss 0.482 \n",
      "Epoch 2, Step 2850 | Training Accuracy: 0.781 | Test Accuracy: 0.750 | Training Loss: 0.440 | Test Loss 0.510 \n",
      "Epoch 2, Step 3325 | Training Accuracy: 0.703 | Test Accuracy: 0.680 | Training Loss: 0.540 | Test Loss 0.559 \n",
      "Epoch 2, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.734 | Training Loss: 0.427 | Test Loss 0.507 \n",
      "(*) Entering Epoch 3 (285.053 s)\n",
      "Epoch 3, Step 475 | Training Accuracy: 0.781 | Test Accuracy: 0.766 | Training Loss: 0.484 | Test Loss 0.490 \n",
      "Epoch 3, Step 950 | Training Accuracy: 0.734 | Test Accuracy: 0.773 | Training Loss: 0.517 | Test Loss 0.482 \n",
      "Epoch 3, Step 1425 | Training Accuracy: 0.766 | Test Accuracy: 0.688 | Training Loss: 0.455 | Test Loss 0.588 \n",
      "Epoch 3, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.781 | Training Loss: 0.445 | Test Loss 0.450 \n",
      "Epoch 3, Step 2375 | Training Accuracy: 0.742 | Test Accuracy: 0.711 | Training Loss: 0.479 | Test Loss 0.505 \n",
      "Epoch 3, Step 2850 | Training Accuracy: 0.664 | Test Accuracy: 0.820 | Training Loss: 0.579 | Test Loss 0.396 \n",
      "Epoch 3, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.742 | Training Loss: 0.405 | Test Loss 0.512 \n",
      "Epoch 3, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.766 | Training Loss: 0.435 | Test Loss 0.508 \n",
      "(*) Entering Epoch 4 (375.873 s)\n",
      "Epoch 4, Step 475 | Training Accuracy: 0.742 | Test Accuracy: 0.758 | Training Loss: 0.530 | Test Loss 0.452 \n",
      "Epoch 4, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.703 | Training Loss: 0.457 | Test Loss 0.574 \n",
      "Epoch 4, Step 1425 | Training Accuracy: 0.766 | Test Accuracy: 0.719 | Training Loss: 0.474 | Test Loss 0.521 \n",
      "Epoch 4, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.773 | Training Loss: 0.454 | Test Loss 0.500 \n",
      "Epoch 4, Step 2375 | Training Accuracy: 0.781 | Test Accuracy: 0.672 | Training Loss: 0.463 | Test Loss 0.545 \n",
      "Epoch 4, Step 2850 | Training Accuracy: 0.781 | Test Accuracy: 0.766 | Training Loss: 0.511 | Test Loss 0.503 \n",
      "Epoch 4, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.805 | Training Loss: 0.454 | Test Loss 0.442 \n",
      "Epoch 4, Step 3800 | Training Accuracy: 0.727 | Test Accuracy: 0.750 | Training Loss: 0.474 | Test Loss 0.460 \n",
      "(*) Entering Epoch 5 (466.779 s)\n",
      "Epoch 5, Step 475 | Training Accuracy: 0.758 | Test Accuracy: 0.734 | Training Loss: 0.533 | Test Loss 0.526 \n",
      "Epoch 5, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.664 | Training Loss: 0.446 | Test Loss 0.629 \n",
      "Epoch 5, Step 1425 | Training Accuracy: 0.727 | Test Accuracy: 0.773 | Training Loss: 0.537 | Test Loss 0.481 \n",
      "Epoch 5, Step 1900 | Training Accuracy: 0.734 | Test Accuracy: 0.742 | Training Loss: 0.510 | Test Loss 0.496 \n",
      "Epoch 5, Step 2375 | Training Accuracy: 0.781 | Test Accuracy: 0.742 | Training Loss: 0.438 | Test Loss 0.468 \n",
      "Epoch 5, Step 2850 | Training Accuracy: 0.766 | Test Accuracy: 0.797 | Training Loss: 0.463 | Test Loss 0.479 \n",
      "Epoch 5, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.773 | Training Loss: 0.452 | Test Loss 0.480 \n",
      "Epoch 5, Step 3800 | Training Accuracy: 0.758 | Test Accuracy: 0.820 | Training Loss: 0.480 | Test Loss 0.466 \n",
      "(*) Entering Epoch 6 (557.764 s)\n",
      "Epoch 6, Step 475 | Training Accuracy: 0.758 | Test Accuracy: 0.781 | Training Loss: 0.482 | Test Loss 0.462 *\n",
      "Epoch 6, Step 950 | Training Accuracy: 0.766 | Test Accuracy: 0.805 | Training Loss: 0.506 | Test Loss 0.467 *\n",
      "Epoch 6, Step 1425 | Training Accuracy: 0.750 | Test Accuracy: 0.789 | Training Loss: 0.514 | Test Loss 0.426 \n",
      "Epoch 6, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.758 | Training Loss: 0.430 | Test Loss 0.520 \n",
      "Epoch 6, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.688 | Training Loss: 0.441 | Test Loss 0.526 \n",
      "Epoch 6, Step 2850 | Training Accuracy: 0.719 | Test Accuracy: 0.750 | Training Loss: 0.494 | Test Loss 0.512 \n",
      "Epoch 6, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.393 | Test Loss 0.417 *\n",
      "Epoch 6, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.758 | Training Loss: 0.396 | Test Loss 0.471 \n",
      "(*) Entering Epoch 7 (649.173 s)\n",
      "Epoch 7, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.711 | Training Loss: 0.430 | Test Loss 0.520 \n",
      "Epoch 7, Step 950 | Training Accuracy: 0.773 | Test Accuracy: 0.773 | Training Loss: 0.501 | Test Loss 0.454 \n",
      "Epoch 7, Step 1425 | Training Accuracy: 0.781 | Test Accuracy: 0.805 | Training Loss: 0.452 | Test Loss 0.415 \n",
      "Epoch 7, Step 1900 | Training Accuracy: 0.750 | Test Accuracy: 0.773 | Training Loss: 0.471 | Test Loss 0.464 \n",
      "Epoch 7, Step 2375 | Training Accuracy: 0.766 | Test Accuracy: 0.859 | Training Loss: 0.503 | Test Loss 0.353 *\n",
      "Epoch 7, Step 2850 | Training Accuracy: 0.773 | Test Accuracy: 0.727 | Training Loss: 0.472 | Test Loss 0.571 \n",
      "Epoch 7, Step 3325 | Training Accuracy: 0.734 | Test Accuracy: 0.773 | Training Loss: 0.497 | Test Loss 0.450 \n",
      "Epoch 7, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.875 | Training Loss: 0.461 | Test Loss 0.358 *\n",
      "(*) Entering Epoch 8 (740.285 s)\n",
      "Epoch 8, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.384 | Test Loss 0.440 \n",
      "Epoch 8, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.773 | Training Loss: 0.497 | Test Loss 0.471 \n",
      "Epoch 8, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.327 | Test Loss 0.436 \n",
      "Epoch 8, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.789 | Training Loss: 0.416 | Test Loss 0.453 \n",
      "Epoch 8, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.805 | Training Loss: 0.472 | Test Loss 0.403 \n",
      "Epoch 8, Step 2850 | Training Accuracy: 0.758 | Test Accuracy: 0.781 | Training Loss: 0.473 | Test Loss 0.466 \n",
      "Epoch 8, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.867 | Training Loss: 0.420 | Test Loss 0.328 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 8, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.828 | Training Loss: 0.424 | Test Loss 0.373 \n",
      "(*) Entering Epoch 9 (831.050 s)\n",
      "Epoch 9, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.395 | Test Loss 0.459 \n",
      "Epoch 9, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.351 | Test Loss 0.370 \n",
      "Epoch 9, Step 1425 | Training Accuracy: 0.750 | Test Accuracy: 0.812 | Training Loss: 0.481 | Test Loss 0.442 \n",
      "Epoch 9, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.413 | Test Loss 0.427 \n",
      "Epoch 9, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.391 | Test Loss 0.385 \n",
      "Epoch 9, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.789 | Training Loss: 0.444 | Test Loss 0.445 \n",
      "Epoch 9, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.433 | Test Loss 0.457 \n",
      "Epoch 9, Step 3800 | Training Accuracy: 0.914 | Test Accuracy: 0.852 | Training Loss: 0.284 | Test Loss 0.389 \n",
      "(*) Entering Epoch 10 (921.774 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch10.ckpt-10\n",
      "Epoch 10, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.291 | Test Loss 0.406 \n",
      "Epoch 10, Step 950 | Training Accuracy: 0.766 | Test Accuracy: 0.836 | Training Loss: 0.415 | Test Loss 0.372 \n",
      "Epoch 10, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.766 | Training Loss: 0.380 | Test Loss 0.472 \n",
      "Epoch 10, Step 1900 | Training Accuracy: 0.781 | Test Accuracy: 0.836 | Training Loss: 0.439 | Test Loss 0.457 \n",
      "Epoch 10, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.380 | Test Loss 0.399 \n",
      "Epoch 10, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.337 | Test Loss 0.352 \n",
      "Epoch 10, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.766 | Training Loss: 0.373 | Test Loss 0.467 \n",
      "Epoch 10, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.766 | Training Loss: 0.414 | Test Loss 0.429 \n",
      "(*) Entering Epoch 11 (1013.043 s)\n",
      "Epoch 11, Step 475 | Training Accuracy: 0.789 | Test Accuracy: 0.852 | Training Loss: 0.470 | Test Loss 0.369 \n",
      "Epoch 11, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.402 | Test Loss 0.338 \n",
      "Epoch 11, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.431 | Test Loss 0.374 \n",
      "Epoch 11, Step 1900 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.383 | Test Loss 0.397 \n",
      "Epoch 11, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.734 | Training Loss: 0.353 | Test Loss 0.457 \n",
      "Epoch 11, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.758 | Training Loss: 0.345 | Test Loss 0.449 \n",
      "Epoch 11, Step 3325 | Training Accuracy: 0.773 | Test Accuracy: 0.766 | Training Loss: 0.484 | Test Loss 0.478 \n",
      "Epoch 11, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.750 | Training Loss: 0.333 | Test Loss 0.485 \n",
      "(*) Entering Epoch 12 (1104.043 s)\n",
      "Epoch 12, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.773 | Training Loss: 0.349 | Test Loss 0.465 \n",
      "Epoch 12, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.797 | Training Loss: 0.413 | Test Loss 0.446 \n",
      "Epoch 12, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.413 | Test Loss 0.350 \n",
      "Epoch 12, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.375 | Test Loss 0.346 \n",
      "Epoch 12, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.425 | Test Loss 0.484 \n",
      "Epoch 12, Step 2850 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.453 | Test Loss 0.359 \n",
      "Epoch 12, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.406 | Test Loss 0.380 \n",
      "Epoch 12, Step 3800 | Training Accuracy: 0.781 | Test Accuracy: 0.820 | Training Loss: 0.418 | Test Loss 0.411 \n",
      "(*) Entering Epoch 13 (1195.140 s)\n",
      "Epoch 13, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.393 | Test Loss 0.405 \n",
      "Epoch 13, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.443 | Test Loss 0.347 \n",
      "Epoch 13, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.335 | Test Loss 0.440 \n",
      "Epoch 13, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.781 | Training Loss: 0.368 | Test Loss 0.420 \n",
      "Epoch 13, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.805 | Training Loss: 0.388 | Test Loss 0.414 \n",
      "Epoch 13, Step 2850 | Training Accuracy: 0.766 | Test Accuracy: 0.867 | Training Loss: 0.431 | Test Loss 0.357 \n",
      "Epoch 13, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.359 | Test Loss 0.399 \n",
      "Epoch 13, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.727 | Training Loss: 0.440 | Test Loss 0.562 \n",
      "(*) Entering Epoch 14 (1286.215 s)\n",
      "Epoch 14, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.328 | Test Loss 0.374 \n",
      "Epoch 14, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.389 | Test Loss 0.417 \n",
      "Epoch 14, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.742 | Training Loss: 0.383 | Test Loss 0.424 \n",
      "Epoch 14, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.363 | Test Loss 0.452 \n",
      "Epoch 14, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.812 | Training Loss: 0.426 | Test Loss 0.414 \n",
      "Epoch 14, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.375 | Test Loss 0.365 \n",
      "Epoch 14, Step 3325 | Training Accuracy: 0.750 | Test Accuracy: 0.758 | Training Loss: 0.419 | Test Loss 0.428 \n",
      "Epoch 14, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.409 | Test Loss 0.414 \n",
      "(*) Entering Epoch 15 (1377.303 s)\n",
      "Epoch 15, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.370 | Test Loss 0.330 \n",
      "Epoch 15, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.789 | Training Loss: 0.380 | Test Loss 0.490 \n",
      "Epoch 15, Step 1425 | Training Accuracy: 0.766 | Test Accuracy: 0.828 | Training Loss: 0.421 | Test Loss 0.351 \n",
      "Epoch 15, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.340 | Test Loss 0.471 \n",
      "Epoch 15, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.812 | Training Loss: 0.400 | Test Loss 0.405 \n",
      "Epoch 15, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.379 | Test Loss 0.432 \n",
      "Epoch 15, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.875 | Training Loss: 0.351 | Test Loss 0.406 \n",
      "Epoch 15, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.392 | Test Loss 0.379 \n",
      "(*) Entering Epoch 16 (1468.389 s)\n",
      "Epoch 16, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.365 | Test Loss 0.430 \n",
      "Epoch 16, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.433 | Test Loss 0.424 \n",
      "Epoch 16, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.387 | Test Loss 0.424 \n",
      "Epoch 16, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.781 | Training Loss: 0.425 | Test Loss 0.418 \n",
      "Epoch 16, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.412 | Test Loss 0.412 \n",
      "Epoch 16, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.394 | Test Loss 0.363 \n",
      "Epoch 16, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.475 | Test Loss 0.380 \n",
      "Epoch 16, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.422 | Test Loss 0.438 \n",
      "(*) Entering Epoch 17 (1559.513 s)\n",
      "Epoch 17, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.403 | Test Loss 0.405 \n",
      "Epoch 17, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.381 | Test Loss 0.339 \n",
      "Epoch 17, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.402 | Test Loss 0.363 \n",
      "Epoch 17, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.393 | Test Loss 0.386 \n",
      "Epoch 17, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.311 | Test Loss 0.396 \n",
      "Epoch 17, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.409 | Test Loss 0.416 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 17, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.836 | Training Loss: 0.406 | Test Loss 0.347 \n",
      "Epoch 17, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.781 | Training Loss: 0.387 | Test Loss 0.483 \n",
      "(*) Entering Epoch 18 (1650.734 s)\n",
      "Epoch 18, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.412 | Test Loss 0.419 \n",
      "Epoch 18, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.353 | Test Loss 0.395 \n",
      "Epoch 18, Step 1425 | Training Accuracy: 0.789 | Test Accuracy: 0.781 | Training Loss: 0.469 | Test Loss 0.426 \n",
      "Epoch 18, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.758 | Training Loss: 0.319 | Test Loss 0.393 \n",
      "Epoch 18, Step 2375 | Training Accuracy: 0.781 | Test Accuracy: 0.805 | Training Loss: 0.454 | Test Loss 0.406 \n",
      "Epoch 18, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.383 | Test Loss 0.434 \n",
      "Epoch 18, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.394 | Test Loss 0.420 \n",
      "Epoch 18, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.395 | Test Loss 0.450 \n",
      "(*) Entering Epoch 19 (1741.897 s)\n",
      "Epoch 19, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.805 | Training Loss: 0.399 | Test Loss 0.382 \n",
      "Epoch 19, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.805 | Training Loss: 0.446 | Test Loss 0.440 \n",
      "Epoch 19, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.379 | Test Loss 0.312 \n",
      "Epoch 19, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.836 | Training Loss: 0.387 | Test Loss 0.361 \n",
      "Epoch 19, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.727 | Training Loss: 0.435 | Test Loss 0.490 \n",
      "Epoch 19, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.828 | Training Loss: 0.428 | Test Loss 0.335 \n",
      "Epoch 19, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.371 | Test Loss 0.346 \n",
      "Epoch 19, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.335 | Test Loss 0.335 \n",
      "(*) Entering Epoch 20 (1833.083 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch20.ckpt-20\n",
      "Epoch 20, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.444 | Test Loss 0.353 \n",
      "Epoch 20, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.758 | Training Loss: 0.340 | Test Loss 0.455 \n",
      "Epoch 20, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.400 | Test Loss 0.406 \n",
      "Epoch 20, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.891 | Training Loss: 0.359 | Test Loss 0.301 *\n",
      "Epoch 20, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.797 | Training Loss: 0.418 | Test Loss 0.400 \n",
      "Epoch 20, Step 2850 | Training Accuracy: 0.812 | Test Accuracy: 0.773 | Training Loss: 0.351 | Test Loss 0.435 \n",
      "Epoch 20, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.742 | Training Loss: 0.404 | Test Loss 0.454 \n",
      "Epoch 20, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.415 | Test Loss 0.342 \n",
      "(*) Entering Epoch 21 (1924.588 s)\n",
      "Epoch 21, Step 475 | Training Accuracy: 0.781 | Test Accuracy: 0.789 | Training Loss: 0.466 | Test Loss 0.500 \n",
      "Epoch 21, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.812 | Training Loss: 0.405 | Test Loss 0.426 \n",
      "Epoch 21, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.319 | Test Loss 0.421 \n",
      "Epoch 21, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.407 | Test Loss 0.371 \n",
      "Epoch 21, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.852 | Training Loss: 0.390 | Test Loss 0.353 \n",
      "Epoch 21, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.351 | Test Loss 0.418 \n",
      "Epoch 21, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.750 | Training Loss: 0.404 | Test Loss 0.478 \n",
      "Epoch 21, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.379 | Test Loss 0.392 \n",
      "(*) Entering Epoch 22 (2015.635 s)\n",
      "Epoch 22, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.390 | Test Loss 0.413 \n",
      "Epoch 22, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.397 | Test Loss 0.434 \n",
      "Epoch 22, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.387 | Test Loss 0.327 \n",
      "Epoch 22, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.766 | Training Loss: 0.293 | Test Loss 0.417 \n",
      "Epoch 22, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.766 | Training Loss: 0.415 | Test Loss 0.455 \n",
      "Epoch 22, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.883 | Training Loss: 0.347 | Test Loss 0.333 \n",
      "Epoch 22, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.781 | Training Loss: 0.391 | Test Loss 0.501 \n",
      "Epoch 22, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.338 | Test Loss 0.462 \n",
      "(*) Entering Epoch 23 (2106.636 s)\n",
      "Epoch 23, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.773 | Training Loss: 0.380 | Test Loss 0.446 \n",
      "Epoch 23, Step 950 | Training Accuracy: 0.891 | Test Accuracy: 0.797 | Training Loss: 0.330 | Test Loss 0.416 \n",
      "Epoch 23, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.383 | Test Loss 0.384 \n",
      "Epoch 23, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.339 | Test Loss 0.419 \n",
      "Epoch 23, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.440 | Test Loss 0.407 \n",
      "Epoch 23, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.766 | Training Loss: 0.403 | Test Loss 0.461 \n",
      "Epoch 23, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.789 | Training Loss: 0.426 | Test Loss 0.545 \n",
      "Epoch 23, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.340 | Test Loss 0.351 \n",
      "(*) Entering Epoch 24 (2197.780 s)\n",
      "Epoch 24, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.337 | Test Loss 0.416 \n",
      "Epoch 24, Step 950 | Training Accuracy: 0.734 | Test Accuracy: 0.844 | Training Loss: 0.533 | Test Loss 0.363 \n",
      "Epoch 24, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.421 | Test Loss 0.368 \n",
      "Epoch 24, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.797 | Training Loss: 0.423 | Test Loss 0.477 \n",
      "Epoch 24, Step 2375 | Training Accuracy: 0.750 | Test Accuracy: 0.844 | Training Loss: 0.450 | Test Loss 0.358 \n",
      "Epoch 24, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.336 | Test Loss 0.332 \n",
      "Epoch 24, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.867 | Training Loss: 0.410 | Test Loss 0.344 \n",
      "Epoch 24, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.340 | Test Loss 0.416 \n",
      "(*) Entering Epoch 25 (2288.870 s)\n",
      "Epoch 25, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.344 | Test Loss 0.418 \n",
      "Epoch 25, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.773 | Training Loss: 0.354 | Test Loss 0.484 \n",
      "Epoch 25, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.350 | Test Loss 0.380 \n",
      "Epoch 25, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.898 | Training Loss: 0.387 | Test Loss 0.326 *\n",
      "Epoch 25, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.324 | Test Loss 0.386 \n",
      "Epoch 25, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.359 | Test Loss 0.384 \n",
      "Epoch 25, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.852 | Training Loss: 0.409 | Test Loss 0.307 \n",
      "Epoch 25, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.766 | Training Loss: 0.428 | Test Loss 0.491 \n",
      "(*) Entering Epoch 26 (2380.273 s)\n",
      "Epoch 26, Step 475 | Training Accuracy: 0.781 | Test Accuracy: 0.805 | Training Loss: 0.433 | Test Loss 0.422 \n",
      "Epoch 26, Step 950 | Training Accuracy: 0.773 | Test Accuracy: 0.812 | Training Loss: 0.446 | Test Loss 0.408 \n",
      "Epoch 26, Step 1425 | Training Accuracy: 0.906 | Test Accuracy: 0.789 | Training Loss: 0.265 | Test Loss 0.424 \n",
      "Epoch 26, Step 1900 | Training Accuracy: 0.781 | Test Accuracy: 0.773 | Training Loss: 0.463 | Test Loss 0.474 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 26, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.425 | Test Loss 0.345 \n",
      "Epoch 26, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.371 | Test Loss 0.404 \n",
      "Epoch 26, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.386 | Test Loss 0.374 \n",
      "Epoch 26, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.805 | Training Loss: 0.399 | Test Loss 0.431 \n",
      "(*) Entering Epoch 27 (2471.466 s)\n",
      "Epoch 27, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.412 | Test Loss 0.350 \n",
      "Epoch 27, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.375 | Test Loss 0.422 \n",
      "Epoch 27, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.463 | Test Loss 0.403 \n",
      "Epoch 27, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.758 | Training Loss: 0.392 | Test Loss 0.508 \n",
      "Epoch 27, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.852 | Training Loss: 0.322 | Test Loss 0.330 \n",
      "Epoch 27, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.342 | Test Loss 0.324 \n",
      "Epoch 27, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.789 | Training Loss: 0.423 | Test Loss 0.469 \n",
      "Epoch 27, Step 3800 | Training Accuracy: 0.781 | Test Accuracy: 0.859 | Training Loss: 0.410 | Test Loss 0.311 \n",
      "(*) Entering Epoch 28 (2562.563 s)\n",
      "Epoch 28, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.376 | Test Loss 0.289 \n",
      "Epoch 28, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.389 | Test Loss 0.344 \n",
      "Epoch 28, Step 1425 | Training Accuracy: 0.773 | Test Accuracy: 0.852 | Training Loss: 0.459 | Test Loss 0.347 \n",
      "Epoch 28, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.421 | Test Loss 0.481 \n",
      "Epoch 28, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.329 | Test Loss 0.429 \n",
      "Epoch 28, Step 2850 | Training Accuracy: 0.789 | Test Accuracy: 0.820 | Training Loss: 0.394 | Test Loss 0.403 \n",
      "Epoch 28, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.758 | Training Loss: 0.274 | Test Loss 0.451 \n",
      "Epoch 28, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.355 | Test Loss 0.357 \n",
      "(*) Entering Epoch 29 (2653.618 s)\n",
      "Epoch 29, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.852 | Training Loss: 0.368 | Test Loss 0.389 \n",
      "Epoch 29, Step 950 | Training Accuracy: 0.781 | Test Accuracy: 0.789 | Training Loss: 0.392 | Test Loss 0.447 \n",
      "Epoch 29, Step 1425 | Training Accuracy: 0.781 | Test Accuracy: 0.828 | Training Loss: 0.466 | Test Loss 0.436 \n",
      "Epoch 29, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.391 | Test Loss 0.346 \n",
      "Epoch 29, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.335 | Test Loss 0.418 \n",
      "Epoch 29, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.448 | Test Loss 0.357 \n",
      "Epoch 29, Step 3325 | Training Accuracy: 0.773 | Test Accuracy: 0.773 | Training Loss: 0.396 | Test Loss 0.430 \n",
      "Epoch 29, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.376 | Test Loss 0.421 \n",
      "(*) Entering Epoch 30 (2744.733 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch30.ckpt-30\n",
      "Epoch 30, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.373 | Test Loss 0.427 \n",
      "Epoch 30, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.427 | Test Loss 0.395 \n",
      "Epoch 30, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.345 | Test Loss 0.380 \n",
      "Epoch 30, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.374 | Test Loss 0.415 \n",
      "Epoch 30, Step 2375 | Training Accuracy: 0.766 | Test Accuracy: 0.820 | Training Loss: 0.418 | Test Loss 0.383 \n",
      "Epoch 30, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.766 | Training Loss: 0.354 | Test Loss 0.465 \n",
      "Epoch 30, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.859 | Training Loss: 0.371 | Test Loss 0.323 \n",
      "Epoch 30, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.392 | Test Loss 0.421 \n",
      "(*) Entering Epoch 31 (2836.106 s)\n",
      "Epoch 31, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.329 | Test Loss 0.374 \n",
      "Epoch 31, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.355 | Test Loss 0.314 \n",
      "Epoch 31, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.418 | Test Loss 0.325 \n",
      "Epoch 31, Step 1900 | Training Accuracy: 0.898 | Test Accuracy: 0.766 | Training Loss: 0.317 | Test Loss 0.430 \n",
      "Epoch 31, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.357 | Test Loss 0.436 \n",
      "Epoch 31, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.891 | Training Loss: 0.350 | Test Loss 0.339 \n",
      "Epoch 31, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.379 | Test Loss 0.440 \n",
      "Epoch 31, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.349 | Test Loss 0.404 \n",
      "(*) Entering Epoch 32 (2927.094 s)\n",
      "Epoch 32, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.363 | Test Loss 0.334 \n",
      "Epoch 32, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.781 | Training Loss: 0.375 | Test Loss 0.441 \n",
      "Epoch 32, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.324 | Test Loss 0.411 \n",
      "Epoch 32, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.867 | Training Loss: 0.362 | Test Loss 0.351 \n",
      "Epoch 32, Step 2375 | Training Accuracy: 0.781 | Test Accuracy: 0.828 | Training Loss: 0.440 | Test Loss 0.380 \n",
      "Epoch 32, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.354 | Test Loss 0.381 \n",
      "Epoch 32, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.340 | Test Loss 0.436 \n",
      "Epoch 32, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.859 | Training Loss: 0.393 | Test Loss 0.381 \n",
      "(*) Entering Epoch 33 (3018.116 s)\n",
      "Epoch 33, Step 475 | Training Accuracy: 0.773 | Test Accuracy: 0.797 | Training Loss: 0.470 | Test Loss 0.409 \n",
      "Epoch 33, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.413 | Test Loss 0.384 \n",
      "Epoch 33, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.335 | Test Loss 0.399 \n",
      "Epoch 33, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.420 | Test Loss 0.437 \n",
      "Epoch 33, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.742 | Training Loss: 0.413 | Test Loss 0.461 \n",
      "Epoch 33, Step 2850 | Training Accuracy: 0.797 | Test Accuracy: 0.750 | Training Loss: 0.415 | Test Loss 0.483 \n",
      "Epoch 33, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.494 | Test Loss 0.434 \n",
      "Epoch 33, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.343 | Test Loss 0.310 \n",
      "(*) Entering Epoch 34 (3109.191 s)\n",
      "Epoch 34, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.385 | Test Loss 0.354 \n",
      "Epoch 34, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.398 | Test Loss 0.332 \n",
      "Epoch 34, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.797 | Training Loss: 0.396 | Test Loss 0.372 \n",
      "Epoch 34, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.329 | Test Loss 0.308 \n",
      "Epoch 34, Step 2375 | Training Accuracy: 0.766 | Test Accuracy: 0.805 | Training Loss: 0.428 | Test Loss 0.414 \n",
      "Epoch 34, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.353 | Test Loss 0.444 \n",
      "Epoch 34, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.867 | Training Loss: 0.439 | Test Loss 0.332 \n",
      "Epoch 34, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.325 | Test Loss 0.417 \n",
      "(*) Entering Epoch 35 (3200.221 s)\n",
      "Epoch 35, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.329 | Test Loss 0.343 \n",
      "Epoch 35, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.852 | Training Loss: 0.320 | Test Loss 0.390 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 35, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.323 | Test Loss 0.333 \n",
      "Epoch 35, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.330 | Test Loss 0.306 \n",
      "Epoch 35, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.417 | Test Loss 0.406 \n",
      "Epoch 35, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.346 | Test Loss 0.435 \n",
      "Epoch 35, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.353 | Test Loss 0.403 \n",
      "Epoch 35, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.386 | Test Loss 0.391 \n",
      "(*) Entering Epoch 36 (3291.241 s)\n",
      "Epoch 36, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.314 | Test Loss 0.325 \n",
      "Epoch 36, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.300 | Test Loss 0.338 \n",
      "Epoch 36, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.391 | Test Loss 0.431 \n",
      "Epoch 36, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.361 | Test Loss 0.482 \n",
      "Epoch 36, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.338 | Test Loss 0.417 \n",
      "Epoch 36, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.333 | Test Loss 0.444 \n",
      "Epoch 36, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.891 | Training Loss: 0.346 | Test Loss 0.305 \n",
      "Epoch 36, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.355 | Test Loss 0.391 \n",
      "(*) Entering Epoch 37 (3382.341 s)\n",
      "Epoch 37, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.351 | Test Loss 0.349 \n",
      "Epoch 37, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.333 | Test Loss 0.384 \n",
      "Epoch 37, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.398 | Test Loss 0.422 \n",
      "Epoch 37, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.773 | Training Loss: 0.384 | Test Loss 0.470 \n",
      "Epoch 37, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.844 | Training Loss: 0.267 | Test Loss 0.392 \n",
      "Epoch 37, Step 2850 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.378 | Test Loss 0.289 \n",
      "Epoch 37, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.322 | Test Loss 0.359 \n",
      "Epoch 37, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.341 | Test Loss 0.346 \n",
      "(*) Entering Epoch 38 (3473.508 s)\n",
      "Epoch 38, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.781 | Training Loss: 0.448 | Test Loss 0.482 \n",
      "Epoch 38, Step 950 | Training Accuracy: 0.766 | Test Accuracy: 0.797 | Training Loss: 0.478 | Test Loss 0.424 \n",
      "Epoch 38, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.883 | Training Loss: 0.418 | Test Loss 0.300 \n",
      "Epoch 38, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.315 | Test Loss 0.407 \n",
      "Epoch 38, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.773 | Training Loss: 0.405 | Test Loss 0.431 \n",
      "Epoch 38, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.338 | Test Loss 0.403 \n",
      "Epoch 38, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.334 | Test Loss 0.275 \n",
      "Epoch 38, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.418 | Test Loss 0.381 \n",
      "(*) Entering Epoch 39 (3564.591 s)\n",
      "Epoch 39, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.305 | Test Loss 0.441 \n",
      "Epoch 39, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.348 | Test Loss 0.375 \n",
      "Epoch 39, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.361 | Test Loss 0.431 \n",
      "Epoch 39, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.409 | Test Loss 0.343 \n",
      "Epoch 39, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.781 | Training Loss: 0.410 | Test Loss 0.406 \n",
      "Epoch 39, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.859 | Training Loss: 0.360 | Test Loss 0.357 \n",
      "Epoch 39, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.388 | Test Loss 0.420 \n",
      "Epoch 39, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.317 | Test Loss 0.357 \n",
      "(*) Entering Epoch 40 (3655.658 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch40.ckpt-40\n",
      "Epoch 40, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.797 | Training Loss: 0.398 | Test Loss 0.484 \n",
      "Epoch 40, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.758 | Training Loss: 0.383 | Test Loss 0.440 \n",
      "Epoch 40, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.447 | Test Loss 0.342 \n",
      "Epoch 40, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.351 | Test Loss 0.364 \n",
      "Epoch 40, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.402 | Test Loss 0.406 \n",
      "Epoch 40, Step 2850 | Training Accuracy: 0.797 | Test Accuracy: 0.867 | Training Loss: 0.428 | Test Loss 0.298 \n",
      "Epoch 40, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.883 | Training Loss: 0.310 | Test Loss 0.347 \n",
      "Epoch 40, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.379 | Test Loss 0.384 \n",
      "(*) Entering Epoch 41 (3747.044 s)\n",
      "Epoch 41, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.348 | Test Loss 0.355 \n",
      "Epoch 41, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.312 | Test Loss 0.383 \n",
      "Epoch 41, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.383 | Test Loss 0.367 \n",
      "Epoch 41, Step 1900 | Training Accuracy: 0.773 | Test Accuracy: 0.875 | Training Loss: 0.402 | Test Loss 0.335 \n",
      "Epoch 41, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.319 | Test Loss 0.420 \n",
      "Epoch 41, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.337 | Test Loss 0.392 \n",
      "Epoch 41, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.828 | Training Loss: 0.418 | Test Loss 0.380 \n",
      "Epoch 41, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.386 | Test Loss 0.402 \n",
      "(*) Entering Epoch 42 (3838.146 s)\n",
      "Epoch 42, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.891 | Training Loss: 0.394 | Test Loss 0.275 \n",
      "Epoch 42, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.438 | Test Loss 0.430 \n",
      "Epoch 42, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.369 | Test Loss 0.402 \n",
      "Epoch 42, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.346 | Test Loss 0.360 \n",
      "Epoch 42, Step 2375 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.303 | Test Loss 0.435 \n",
      "Epoch 42, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.852 | Training Loss: 0.420 | Test Loss 0.363 \n",
      "Epoch 42, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.852 | Training Loss: 0.441 | Test Loss 0.364 \n",
      "Epoch 42, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.773 | Training Loss: 0.394 | Test Loss 0.464 \n",
      "(*) Entering Epoch 43 (3929.397 s)\n",
      "Epoch 43, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.867 | Training Loss: 0.315 | Test Loss 0.324 \n",
      "Epoch 43, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.859 | Training Loss: 0.395 | Test Loss 0.312 \n",
      "Epoch 43, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.365 | Test Loss 0.295 \n",
      "Epoch 43, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.898 | Training Loss: 0.381 | Test Loss 0.358 \n",
      "Epoch 43, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.355 | Test Loss 0.394 \n",
      "Epoch 43, Step 2850 | Training Accuracy: 0.930 | Test Accuracy: 0.844 | Training Loss: 0.224 | Test Loss 0.376 \n",
      "Epoch 43, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.781 | Training Loss: 0.366 | Test Loss 0.426 \n",
      "Epoch 43, Step 3800 | Training Accuracy: 0.891 | Test Accuracy: 0.797 | Training Loss: 0.327 | Test Loss 0.402 \n",
      "(*) Entering Epoch 44 (4020.600 s)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 44, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.844 | Training Loss: 0.394 | Test Loss 0.342 \n",
      "Epoch 44, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.333 | Test Loss 0.369 \n",
      "Epoch 44, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.315 | Test Loss 0.356 \n",
      "Epoch 44, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.323 | Test Loss 0.389 \n",
      "Epoch 44, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.891 | Training Loss: 0.385 | Test Loss 0.244 \n",
      "Epoch 44, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.380 | Test Loss 0.369 \n",
      "Epoch 44, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.805 | Training Loss: 0.422 | Test Loss 0.438 \n",
      "Epoch 44, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.292 | Test Loss 0.329 \n",
      "(*) Entering Epoch 45 (4111.713 s)\n",
      "Epoch 45, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.351 | Test Loss 0.346 \n",
      "Epoch 45, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.758 | Training Loss: 0.332 | Test Loss 0.430 \n",
      "Epoch 45, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.389 | Test Loss 0.363 \n",
      "Epoch 45, Step 1900 | Training Accuracy: 0.906 | Test Accuracy: 0.844 | Training Loss: 0.320 | Test Loss 0.363 \n",
      "Epoch 45, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.349 | Test Loss 0.444 \n",
      "Epoch 45, Step 2850 | Training Accuracy: 0.773 | Test Accuracy: 0.859 | Training Loss: 0.469 | Test Loss 0.356 \n",
      "Epoch 45, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.283 | Test Loss 0.430 \n",
      "Epoch 45, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.403 | Test Loss 0.364 \n",
      "(*) Entering Epoch 46 (4202.826 s)\n",
      "Epoch 46, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.820 | Training Loss: 0.448 | Test Loss 0.423 \n",
      "Epoch 46, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.401 | Test Loss 0.358 \n",
      "Epoch 46, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.859 | Training Loss: 0.405 | Test Loss 0.378 \n",
      "Epoch 46, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.836 | Training Loss: 0.413 | Test Loss 0.358 \n",
      "Epoch 46, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.349 | Test Loss 0.449 \n",
      "Epoch 46, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.844 | Training Loss: 0.351 | Test Loss 0.380 \n",
      "Epoch 46, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.343 | Test Loss 0.461 \n",
      "Epoch 46, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.318 | Test Loss 0.409 \n",
      "(*) Entering Epoch 47 (4293.944 s)\n",
      "Epoch 47, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.805 | Training Loss: 0.438 | Test Loss 0.445 \n",
      "Epoch 47, Step 950 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.401 | Test Loss 0.367 \n",
      "Epoch 47, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.388 | Test Loss 0.366 \n",
      "Epoch 47, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.324 | Test Loss 0.401 \n",
      "Epoch 47, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.382 | Test Loss 0.418 \n",
      "Epoch 47, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.313 | Test Loss 0.349 \n",
      "Epoch 47, Step 3325 | Training Accuracy: 0.734 | Test Accuracy: 0.836 | Training Loss: 0.478 | Test Loss 0.347 \n",
      "Epoch 47, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.291 | Test Loss 0.407 \n",
      "(*) Entering Epoch 48 (4385.018 s)\n",
      "Epoch 48, Step 475 | Training Accuracy: 0.758 | Test Accuracy: 0.852 | Training Loss: 0.381 | Test Loss 0.381 \n",
      "Epoch 48, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.852 | Training Loss: 0.321 | Test Loss 0.348 \n",
      "Epoch 48, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.361 | Test Loss 0.368 \n",
      "Epoch 48, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.374 | Test Loss 0.361 \n",
      "Epoch 48, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.315 | Test Loss 0.345 \n",
      "Epoch 48, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.347 | Test Loss 0.403 \n",
      "Epoch 48, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.354 | Test Loss 0.413 \n",
      "Epoch 48, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.343 | Test Loss 0.420 \n",
      "(*) Entering Epoch 49 (4476.127 s)\n",
      "Epoch 49, Step 475 | Training Accuracy: 0.789 | Test Accuracy: 0.805 | Training Loss: 0.396 | Test Loss 0.416 \n",
      "Epoch 49, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.844 | Training Loss: 0.308 | Test Loss 0.334 \n",
      "Epoch 49, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.427 | Test Loss 0.475 \n",
      "Epoch 49, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.303 | Test Loss 0.400 \n",
      "Epoch 49, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.354 | Test Loss 0.414 \n",
      "Epoch 49, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.325 | Test Loss 0.318 \n",
      "Epoch 49, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.413 | Test Loss 0.362 \n",
      "Epoch 49, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.343 | Test Loss 0.426 \n",
      "(*) Entering Epoch 50 (4567.244 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch50.ckpt-50\n",
      "Epoch 50, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.348 | Test Loss 0.370 \n",
      "Epoch 50, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.356 | Test Loss 0.390 \n",
      "Epoch 50, Step 1425 | Training Accuracy: 0.789 | Test Accuracy: 0.836 | Training Loss: 0.433 | Test Loss 0.352 \n",
      "Epoch 50, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.883 | Training Loss: 0.324 | Test Loss 0.311 \n",
      "Epoch 50, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.366 | Test Loss 0.389 \n",
      "Epoch 50, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.333 | Test Loss 0.396 \n",
      "Epoch 50, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.343 | Test Loss 0.405 \n",
      "Epoch 50, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.275 | Test Loss 0.342 \n",
      "(*) Entering Epoch 51 (4658.473 s)\n",
      "Epoch 51, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.385 | Test Loss 0.387 \n",
      "Epoch 51, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.883 | Training Loss: 0.350 | Test Loss 0.337 \n",
      "Epoch 51, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.342 | Test Loss 0.397 \n",
      "Epoch 51, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.267 | Test Loss 0.409 \n",
      "Epoch 51, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.398 | Test Loss 0.413 \n",
      "Epoch 51, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.307 | Test Loss 0.391 \n",
      "Epoch 51, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.433 | Test Loss 0.356 \n",
      "Epoch 51, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.345 | Test Loss 0.374 \n",
      "(*) Entering Epoch 52 (4749.544 s)\n",
      "Epoch 52, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.402 | Test Loss 0.382 \n",
      "Epoch 52, Step 950 | Training Accuracy: 0.797 | Test Accuracy: 0.758 | Training Loss: 0.416 | Test Loss 0.441 \n",
      "Epoch 52, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.377 | Test Loss 0.339 \n",
      "Epoch 52, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.396 | Test Loss 0.382 \n",
      "Epoch 52, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.339 | Test Loss 0.379 \n",
      "Epoch 52, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.334 | Test Loss 0.341 \n",
      "Epoch 52, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.380 | Test Loss 0.392 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 52, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.324 | Test Loss 0.390 \n",
      "(*) Entering Epoch 53 (4840.658 s)\n",
      "Epoch 53, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.361 | Test Loss 0.367 \n",
      "Epoch 53, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.844 | Training Loss: 0.381 | Test Loss 0.315 \n",
      "Epoch 53, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.301 | Test Loss 0.448 \n",
      "Epoch 53, Step 1900 | Training Accuracy: 0.898 | Test Accuracy: 0.875 | Training Loss: 0.281 | Test Loss 0.377 \n",
      "Epoch 53, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.781 | Training Loss: 0.357 | Test Loss 0.419 \n",
      "Epoch 53, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.353 | Test Loss 0.425 \n",
      "Epoch 53, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.336 | Test Loss 0.422 \n",
      "Epoch 53, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.368 | Test Loss 0.409 \n",
      "(*) Entering Epoch 54 (4931.769 s)\n",
      "Epoch 54, Step 475 | Training Accuracy: 0.773 | Test Accuracy: 0.875 | Training Loss: 0.493 | Test Loss 0.323 \n",
      "Epoch 54, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.734 | Training Loss: 0.342 | Test Loss 0.466 \n",
      "Epoch 54, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.283 | Test Loss 0.363 \n",
      "Epoch 54, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.330 | Test Loss 0.347 \n",
      "Epoch 54, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.446 | Test Loss 0.359 \n",
      "Epoch 54, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.883 | Training Loss: 0.380 | Test Loss 0.286 \n",
      "Epoch 54, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.419 | Test Loss 0.331 \n",
      "Epoch 54, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.336 | Test Loss 0.427 \n",
      "(*) Entering Epoch 55 (5022.836 s)\n",
      "Epoch 55, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.308 | Test Loss 0.357 \n",
      "Epoch 55, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.314 | Test Loss 0.398 \n",
      "Epoch 55, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.305 | Test Loss 0.391 \n",
      "Epoch 55, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.852 | Training Loss: 0.341 | Test Loss 0.318 \n",
      "Epoch 55, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.323 | Test Loss 0.390 \n",
      "Epoch 55, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.906 | Training Loss: 0.303 | Test Loss 0.302 *\n",
      "Epoch 55, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.859 | Training Loss: 0.274 | Test Loss 0.381 \n",
      "Epoch 55, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.385 | Test Loss 0.401 \n",
      "(*) Entering Epoch 56 (5114.172 s)\n",
      "Epoch 56, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.342 | Test Loss 0.326 \n",
      "Epoch 56, Step 950 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.284 | Test Loss 0.344 \n",
      "Epoch 56, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.773 | Training Loss: 0.302 | Test Loss 0.524 \n",
      "Epoch 56, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.373 | Test Loss 0.391 \n",
      "Epoch 56, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.316 | Test Loss 0.423 \n",
      "Epoch 56, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.354 | Test Loss 0.329 \n",
      "Epoch 56, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.350 | Test Loss 0.347 \n",
      "Epoch 56, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.365 | Test Loss 0.373 \n",
      "(*) Entering Epoch 57 (5205.262 s)\n",
      "Epoch 57, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.372 | Test Loss 0.379 \n",
      "Epoch 57, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.380 | Test Loss 0.364 \n",
      "Epoch 57, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.302 | Test Loss 0.411 \n",
      "Epoch 57, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.377 | Test Loss 0.363 \n",
      "Epoch 57, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.303 | Test Loss 0.347 \n",
      "Epoch 57, Step 2850 | Training Accuracy: 0.812 | Test Accuracy: 0.828 | Training Loss: 0.372 | Test Loss 0.364 \n",
      "Epoch 57, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.867 | Training Loss: 0.471 | Test Loss 0.324 \n",
      "Epoch 57, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.341 | Test Loss 0.362 \n",
      "(*) Entering Epoch 58 (5296.392 s)\n",
      "Epoch 58, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.357 | Test Loss 0.356 \n",
      "Epoch 58, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.742 | Training Loss: 0.412 | Test Loss 0.478 \n",
      "Epoch 58, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.385 | Test Loss 0.345 \n",
      "Epoch 58, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.318 | Test Loss 0.329 \n",
      "Epoch 58, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.410 | Test Loss 0.436 \n",
      "Epoch 58, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.392 | Test Loss 0.423 \n",
      "Epoch 58, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.379 | Test Loss 0.425 \n",
      "Epoch 58, Step 3800 | Training Accuracy: 0.750 | Test Accuracy: 0.789 | Training Loss: 0.439 | Test Loss 0.447 \n",
      "(*) Entering Epoch 59 (5387.562 s)\n",
      "Epoch 59, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.875 | Training Loss: 0.343 | Test Loss 0.337 \n",
      "Epoch 59, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.330 | Test Loss 0.415 \n",
      "Epoch 59, Step 1425 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.293 | Test Loss 0.331 \n",
      "Epoch 59, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.351 | Test Loss 0.380 \n",
      "Epoch 59, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.389 | Test Loss 0.489 \n",
      "Epoch 59, Step 2850 | Training Accuracy: 0.797 | Test Accuracy: 0.875 | Training Loss: 0.452 | Test Loss 0.358 \n",
      "Epoch 59, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.351 | Test Loss 0.419 \n",
      "Epoch 59, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.321 | Test Loss 0.417 \n",
      "(*) Entering Epoch 60 (5478.776 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch60.ckpt-60\n",
      "Epoch 60, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.393 | Test Loss 0.357 \n",
      "Epoch 60, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.852 | Training Loss: 0.383 | Test Loss 0.347 \n",
      "Epoch 60, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.342 | Test Loss 0.389 \n",
      "Epoch 60, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.338 | Test Loss 0.459 \n",
      "Epoch 60, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.346 | Test Loss 0.356 \n",
      "Epoch 60, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.401 | Test Loss 0.341 \n",
      "Epoch 60, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.396 | Test Loss 0.367 \n",
      "Epoch 60, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.382 | Test Loss 0.417 \n",
      "(*) Entering Epoch 61 (5570.253 s)\n",
      "Epoch 61, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.320 | Test Loss 0.362 \n",
      "Epoch 61, Step 950 | Training Accuracy: 0.773 | Test Accuracy: 0.789 | Training Loss: 0.486 | Test Loss 0.428 \n",
      "Epoch 61, Step 1425 | Training Accuracy: 0.781 | Test Accuracy: 0.875 | Training Loss: 0.405 | Test Loss 0.299 \n",
      "Epoch 61, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.389 | Test Loss 0.296 \n",
      "Epoch 61, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.327 | Test Loss 0.389 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 61, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.867 | Training Loss: 0.353 | Test Loss 0.332 \n",
      "Epoch 61, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.797 | Training Loss: 0.403 | Test Loss 0.394 \n",
      "Epoch 61, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.376 | Test Loss 0.333 \n",
      "(*) Entering Epoch 62 (5661.325 s)\n",
      "Epoch 62, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.883 | Training Loss: 0.346 | Test Loss 0.323 \n",
      "Epoch 62, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.377 | Test Loss 0.433 \n",
      "Epoch 62, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.875 | Training Loss: 0.300 | Test Loss 0.291 \n",
      "Epoch 62, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.385 | Test Loss 0.386 \n",
      "Epoch 62, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.385 | Test Loss 0.409 \n",
      "Epoch 62, Step 2850 | Training Accuracy: 0.891 | Test Accuracy: 0.797 | Training Loss: 0.292 | Test Loss 0.448 \n",
      "Epoch 62, Step 3325 | Training Accuracy: 0.781 | Test Accuracy: 0.844 | Training Loss: 0.433 | Test Loss 0.385 \n",
      "Epoch 62, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.875 | Training Loss: 0.463 | Test Loss 0.275 \n",
      "(*) Entering Epoch 63 (5752.367 s)\n",
      "Epoch 63, Step 475 | Training Accuracy: 0.898 | Test Accuracy: 0.805 | Training Loss: 0.256 | Test Loss 0.385 \n",
      "Epoch 63, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.363 | Test Loss 0.338 \n",
      "Epoch 63, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.323 | Test Loss 0.370 \n",
      "Epoch 63, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.758 | Training Loss: 0.349 | Test Loss 0.428 \n",
      "Epoch 63, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.372 | Test Loss 0.363 \n",
      "Epoch 63, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.342 | Test Loss 0.344 \n",
      "Epoch 63, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.891 | Training Loss: 0.368 | Test Loss 0.262 \n",
      "Epoch 63, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.317 | Test Loss 0.485 \n",
      "(*) Entering Epoch 64 (5843.432 s)\n",
      "Epoch 64, Step 475 | Training Accuracy: 0.789 | Test Accuracy: 0.820 | Training Loss: 0.416 | Test Loss 0.358 \n",
      "Epoch 64, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.875 | Training Loss: 0.388 | Test Loss 0.355 \n",
      "Epoch 64, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.392 | Test Loss 0.378 \n",
      "Epoch 64, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.781 | Training Loss: 0.327 | Test Loss 0.429 \n",
      "Epoch 64, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.397 | Test Loss 0.448 \n",
      "Epoch 64, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.333 | Test Loss 0.442 \n",
      "Epoch 64, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.852 | Training Loss: 0.377 | Test Loss 0.325 \n",
      "Epoch 64, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.352 | Test Loss 0.413 \n",
      "(*) Entering Epoch 65 (5934.315 s)\n",
      "Epoch 65, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.797 | Training Loss: 0.332 | Test Loss 0.414 \n",
      "Epoch 65, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.285 | Test Loss 0.376 \n",
      "Epoch 65, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.883 | Training Loss: 0.280 | Test Loss 0.327 \n",
      "Epoch 65, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.419 | Test Loss 0.338 \n",
      "Epoch 65, Step 2375 | Training Accuracy: 0.766 | Test Accuracy: 0.797 | Training Loss: 0.449 | Test Loss 0.384 \n",
      "Epoch 65, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.358 | Test Loss 0.344 \n",
      "Epoch 65, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.309 | Test Loss 0.406 \n",
      "Epoch 65, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.773 | Training Loss: 0.354 | Test Loss 0.397 \n",
      "(*) Entering Epoch 66 (6025.145 s)\n",
      "Epoch 66, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.883 | Training Loss: 0.357 | Test Loss 0.303 \n",
      "Epoch 66, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.396 | Test Loss 0.359 \n",
      "Epoch 66, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.334 | Test Loss 0.419 \n",
      "Epoch 66, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.844 | Training Loss: 0.382 | Test Loss 0.315 \n",
      "Epoch 66, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.356 | Test Loss 0.361 \n",
      "Epoch 66, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.750 | Training Loss: 0.389 | Test Loss 0.435 \n",
      "Epoch 66, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.389 | Test Loss 0.420 \n",
      "Epoch 66, Step 3800 | Training Accuracy: 0.773 | Test Accuracy: 0.891 | Training Loss: 0.467 | Test Loss 0.313 \n",
      "(*) Entering Epoch 67 (6116.034 s)\n",
      "Epoch 67, Step 475 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.266 | Test Loss 0.344 \n",
      "Epoch 67, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.367 | Test Loss 0.442 \n",
      "Epoch 67, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.359 | Test Loss 0.365 \n",
      "Epoch 67, Step 1900 | Training Accuracy: 0.781 | Test Accuracy: 0.828 | Training Loss: 0.408 | Test Loss 0.402 \n",
      "Epoch 67, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.329 | Test Loss 0.363 \n",
      "Epoch 67, Step 2850 | Training Accuracy: 0.781 | Test Accuracy: 0.844 | Training Loss: 0.426 | Test Loss 0.388 \n",
      "Epoch 67, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.289 | Test Loss 0.410 \n",
      "Epoch 67, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.773 | Training Loss: 0.361 | Test Loss 0.467 \n",
      "(*) Entering Epoch 68 (6206.964 s)\n",
      "Epoch 68, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.290 | Test Loss 0.417 \n",
      "Epoch 68, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.342 | Test Loss 0.440 \n",
      "Epoch 68, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.440 | Test Loss 0.407 \n",
      "Epoch 68, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.355 | Test Loss 0.335 \n",
      "Epoch 68, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.321 | Test Loss 0.368 \n",
      "Epoch 68, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.758 | Training Loss: 0.343 | Test Loss 0.489 \n",
      "Epoch 68, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.297 | Test Loss 0.304 \n",
      "Epoch 68, Step 3800 | Training Accuracy: 0.734 | Test Accuracy: 0.836 | Training Loss: 0.554 | Test Loss 0.342 \n",
      "(*) Entering Epoch 69 (6297.756 s)\n",
      "Epoch 69, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.268 | Test Loss 0.458 \n",
      "Epoch 69, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.844 | Training Loss: 0.418 | Test Loss 0.347 \n",
      "Epoch 69, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.883 | Training Loss: 0.366 | Test Loss 0.288 \n",
      "Epoch 69, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.340 | Test Loss 0.437 \n",
      "Epoch 69, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.360 | Test Loss 0.391 \n",
      "Epoch 69, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.435 | Test Loss 0.312 \n",
      "Epoch 69, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.379 | Test Loss 0.314 \n",
      "Epoch 69, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.852 | Training Loss: 0.354 | Test Loss 0.346 \n",
      "(*) Entering Epoch 70 (6388.632 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch70.ckpt-70\n",
      "Epoch 70, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.365 | Test Loss 0.414 \n",
      "Epoch 70, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.867 | Training Loss: 0.373 | Test Loss 0.277 \n",
      "Epoch 70, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.378 | Test Loss 0.465 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 70, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.389 | Test Loss 0.370 \n",
      "Epoch 70, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.820 | Training Loss: 0.323 | Test Loss 0.406 \n",
      "Epoch 70, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.328 | Test Loss 0.406 \n",
      "Epoch 70, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.867 | Training Loss: 0.447 | Test Loss 0.324 \n",
      "Epoch 70, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.351 | Test Loss 0.437 \n",
      "(*) Entering Epoch 71 (6479.699 s)\n",
      "Epoch 71, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.353 | Test Loss 0.393 \n",
      "Epoch 71, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.355 | Test Loss 0.388 \n",
      "Epoch 71, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.342 | Test Loss 0.391 \n",
      "Epoch 71, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.867 | Training Loss: 0.305 | Test Loss 0.322 \n",
      "Epoch 71, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.340 | Test Loss 0.335 \n",
      "Epoch 71, Step 2850 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.415 | Test Loss 0.354 \n",
      "Epoch 71, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.820 | Training Loss: 0.397 | Test Loss 0.389 \n",
      "Epoch 71, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.399 | Test Loss 0.425 \n",
      "(*) Entering Epoch 72 (6570.501 s)\n",
      "Epoch 72, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.331 | Test Loss 0.459 \n",
      "Epoch 72, Step 950 | Training Accuracy: 0.797 | Test Accuracy: 0.859 | Training Loss: 0.434 | Test Loss 0.360 \n",
      "Epoch 72, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.346 | Test Loss 0.409 \n",
      "Epoch 72, Step 1900 | Training Accuracy: 0.750 | Test Accuracy: 0.805 | Training Loss: 0.452 | Test Loss 0.407 \n",
      "Epoch 72, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.306 | Test Loss 0.365 \n",
      "Epoch 72, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.367 | Test Loss 0.361 \n",
      "Epoch 72, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.401 | Test Loss 0.347 \n",
      "Epoch 72, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.358 | Test Loss 0.382 \n",
      "(*) Entering Epoch 73 (6661.354 s)\n",
      "Epoch 73, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.308 | Test Loss 0.428 \n",
      "Epoch 73, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.364 | Test Loss 0.319 \n",
      "Epoch 73, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.325 | Test Loss 0.353 \n",
      "Epoch 73, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.844 | Training Loss: 0.285 | Test Loss 0.427 \n",
      "Epoch 73, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.336 | Test Loss 0.416 \n",
      "Epoch 73, Step 2850 | Training Accuracy: 0.922 | Test Accuracy: 0.766 | Training Loss: 0.269 | Test Loss 0.456 \n",
      "Epoch 73, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.463 | Test Loss 0.374 \n",
      "Epoch 73, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.379 | Test Loss 0.351 \n",
      "(*) Entering Epoch 74 (6752.258 s)\n",
      "Epoch 74, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.350 | Test Loss 0.399 \n",
      "Epoch 74, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.789 | Training Loss: 0.395 | Test Loss 0.405 \n",
      "Epoch 74, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.781 | Training Loss: 0.381 | Test Loss 0.470 \n",
      "Epoch 74, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.922 | Training Loss: 0.297 | Test Loss 0.283 *\n",
      "Epoch 74, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.875 | Training Loss: 0.256 | Test Loss 0.277 \n",
      "Epoch 74, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.852 | Training Loss: 0.389 | Test Loss 0.362 \n",
      "Epoch 74, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.357 | Test Loss 0.417 \n",
      "Epoch 74, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.383 | Test Loss 0.355 \n",
      "(*) Entering Epoch 75 (6843.304 s)\n",
      "Epoch 75, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.402 | Test Loss 0.373 \n",
      "Epoch 75, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.354 | Test Loss 0.375 \n",
      "Epoch 75, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.366 | Test Loss 0.355 \n",
      "Epoch 75, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.363 | Test Loss 0.379 \n",
      "Epoch 75, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.867 | Training Loss: 0.376 | Test Loss 0.325 \n",
      "Epoch 75, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.867 | Training Loss: 0.329 | Test Loss 0.360 \n",
      "Epoch 75, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.339 | Test Loss 0.373 \n",
      "Epoch 75, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.362 | Test Loss 0.372 \n",
      "(*) Entering Epoch 76 (6934.193 s)\n",
      "Epoch 76, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.330 | Test Loss 0.458 \n",
      "Epoch 76, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.891 | Training Loss: 0.301 | Test Loss 0.300 \n",
      "Epoch 76, Step 1425 | Training Accuracy: 0.773 | Test Accuracy: 0.859 | Training Loss: 0.441 | Test Loss 0.291 \n",
      "Epoch 76, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.336 | Test Loss 0.450 \n",
      "Epoch 76, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.349 | Test Loss 0.412 \n",
      "Epoch 76, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.362 | Test Loss 0.360 \n",
      "Epoch 76, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.341 | Test Loss 0.344 \n",
      "Epoch 76, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.358 | Test Loss 0.335 \n",
      "(*) Entering Epoch 77 (7025.101 s)\n",
      "Epoch 77, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.883 | Training Loss: 0.400 | Test Loss 0.319 \n",
      "Epoch 77, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.308 | Test Loss 0.428 \n",
      "Epoch 77, Step 1425 | Training Accuracy: 0.914 | Test Accuracy: 0.852 | Training Loss: 0.290 | Test Loss 0.284 \n",
      "Epoch 77, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.812 | Training Loss: 0.415 | Test Loss 0.412 \n",
      "Epoch 77, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.430 | Test Loss 0.372 \n",
      "Epoch 77, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.334 | Test Loss 0.369 \n",
      "Epoch 77, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.428 | Test Loss 0.376 \n",
      "Epoch 77, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.331 | Test Loss 0.350 \n",
      "(*) Entering Epoch 78 (7116.169 s)\n",
      "Epoch 78, Step 475 | Training Accuracy: 0.898 | Test Accuracy: 0.836 | Training Loss: 0.270 | Test Loss 0.353 \n",
      "Epoch 78, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.852 | Training Loss: 0.339 | Test Loss 0.341 \n",
      "Epoch 78, Step 1425 | Training Accuracy: 0.766 | Test Accuracy: 0.852 | Training Loss: 0.439 | Test Loss 0.343 \n",
      "Epoch 78, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.773 | Training Loss: 0.341 | Test Loss 0.449 \n",
      "Epoch 78, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.316 | Test Loss 0.380 \n",
      "Epoch 78, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.844 | Training Loss: 0.282 | Test Loss 0.328 \n",
      "Epoch 78, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.386 | Test Loss 0.334 \n",
      "Epoch 78, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.297 | Test Loss 0.409 \n",
      "(*) Entering Epoch 79 (7207.069 s)\n",
      "Epoch 79, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.456 | Test Loss 0.405 \n",
      "Epoch 79, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.352 | Test Loss 0.356 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 79, Step 1425 | Training Accuracy: 0.906 | Test Accuracy: 0.844 | Training Loss: 0.266 | Test Loss 0.326 \n",
      "Epoch 79, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.323 | Test Loss 0.360 \n",
      "Epoch 79, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.290 | Test Loss 0.368 \n",
      "Epoch 79, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.411 | Test Loss 0.406 \n",
      "Epoch 79, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.805 | Training Loss: 0.367 | Test Loss 0.412 \n",
      "Epoch 79, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.797 | Training Loss: 0.400 | Test Loss 0.432 \n",
      "(*) Entering Epoch 80 (7297.949 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch80.ckpt-80\n",
      "Epoch 80, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.324 | Test Loss 0.328 \n",
      "Epoch 80, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.354 | Test Loss 0.399 \n",
      "Epoch 80, Step 1425 | Training Accuracy: 0.914 | Test Accuracy: 0.844 | Training Loss: 0.255 | Test Loss 0.349 \n",
      "Epoch 80, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.350 | Test Loss 0.386 \n",
      "Epoch 80, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.387 | Test Loss 0.382 \n",
      "Epoch 80, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.345 | Test Loss 0.367 \n",
      "Epoch 80, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.395 | Test Loss 0.376 \n",
      "Epoch 80, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.922 | Training Loss: 0.368 | Test Loss 0.323 \n",
      "(*) Entering Epoch 81 (7389.064 s)\n",
      "Epoch 81, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.323 | Test Loss 0.507 \n",
      "Epoch 81, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.386 | Test Loss 0.418 \n",
      "Epoch 81, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.323 | Test Loss 0.363 \n",
      "Epoch 81, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.328 | Test Loss 0.404 \n",
      "Epoch 81, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.377 | Test Loss 0.333 \n",
      "Epoch 81, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.336 | Test Loss 0.331 \n",
      "Epoch 81, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.291 | Test Loss 0.407 \n",
      "Epoch 81, Step 3800 | Training Accuracy: 0.898 | Test Accuracy: 0.891 | Training Loss: 0.266 | Test Loss 0.266 \n",
      "(*) Entering Epoch 82 (7479.990 s)\n",
      "Epoch 82, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.750 | Training Loss: 0.342 | Test Loss 0.484 \n",
      "Epoch 82, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.859 | Training Loss: 0.383 | Test Loss 0.326 \n",
      "Epoch 82, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.812 | Training Loss: 0.359 | Test Loss 0.544 \n",
      "Epoch 82, Step 1900 | Training Accuracy: 0.805 | Test Accuracy: 0.781 | Training Loss: 0.388 | Test Loss 0.424 \n",
      "Epoch 82, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.875 | Training Loss: 0.379 | Test Loss 0.307 \n",
      "Epoch 82, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.422 | Test Loss 0.338 \n",
      "Epoch 82, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.867 | Training Loss: 0.281 | Test Loss 0.340 \n",
      "Epoch 82, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.365 | Test Loss 0.360 \n",
      "(*) Entering Epoch 83 (7570.922 s)\n",
      "Epoch 83, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.373 | Test Loss 0.400 \n",
      "Epoch 83, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.342 | Test Loss 0.380 \n",
      "Epoch 83, Step 1425 | Training Accuracy: 0.773 | Test Accuracy: 0.789 | Training Loss: 0.429 | Test Loss 0.470 \n",
      "Epoch 83, Step 1900 | Training Accuracy: 0.805 | Test Accuracy: 0.750 | Training Loss: 0.411 | Test Loss 0.459 \n",
      "Epoch 83, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.317 | Test Loss 0.381 \n",
      "Epoch 83, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.859 | Training Loss: 0.325 | Test Loss 0.342 \n",
      "Epoch 83, Step 3325 | Training Accuracy: 0.773 | Test Accuracy: 0.805 | Training Loss: 0.487 | Test Loss 0.409 \n",
      "Epoch 83, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.364 | Test Loss 0.393 \n",
      "(*) Entering Epoch 84 (7661.860 s)\n",
      "Epoch 84, Step 475 | Training Accuracy: 0.766 | Test Accuracy: 0.852 | Training Loss: 0.408 | Test Loss 0.318 \n",
      "Epoch 84, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.852 | Training Loss: 0.307 | Test Loss 0.352 \n",
      "Epoch 84, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.397 | Test Loss 0.358 \n",
      "Epoch 84, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.311 | Test Loss 0.379 \n",
      "Epoch 84, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.789 | Training Loss: 0.398 | Test Loss 0.384 \n",
      "Epoch 84, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.373 | Test Loss 0.371 \n",
      "Epoch 84, Step 3325 | Training Accuracy: 0.906 | Test Accuracy: 0.805 | Training Loss: 0.245 | Test Loss 0.446 \n",
      "Epoch 84, Step 3800 | Training Accuracy: 0.898 | Test Accuracy: 0.875 | Training Loss: 0.291 | Test Loss 0.387 \n",
      "(*) Entering Epoch 85 (7752.708 s)\n",
      "Epoch 85, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.867 | Training Loss: 0.391 | Test Loss 0.312 \n",
      "Epoch 85, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.336 | Test Loss 0.373 \n",
      "Epoch 85, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.766 | Training Loss: 0.393 | Test Loss 0.493 \n",
      "Epoch 85, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.844 | Training Loss: 0.279 | Test Loss 0.341 \n",
      "Epoch 85, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.403 | Test Loss 0.364 \n",
      "Epoch 85, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.295 | Test Loss 0.401 \n",
      "Epoch 85, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.344 | Test Loss 0.318 \n",
      "Epoch 85, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.859 | Training Loss: 0.278 | Test Loss 0.348 \n",
      "(*) Entering Epoch 86 (7843.657 s)\n",
      "Epoch 86, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.789 | Training Loss: 0.369 | Test Loss 0.407 \n",
      "Epoch 86, Step 950 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.429 | Test Loss 0.345 \n",
      "Epoch 86, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.789 | Training Loss: 0.392 | Test Loss 0.438 \n",
      "Epoch 86, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.359 | Test Loss 0.325 \n",
      "Epoch 86, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.366 | Test Loss 0.434 \n",
      "Epoch 86, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.355 | Test Loss 0.439 \n",
      "Epoch 86, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.367 | Test Loss 0.373 \n",
      "Epoch 86, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.426 | Test Loss 0.326 \n",
      "(*) Entering Epoch 87 (7934.589 s)\n",
      "Epoch 87, Step 475 | Training Accuracy: 0.891 | Test Accuracy: 0.852 | Training Loss: 0.286 | Test Loss 0.361 \n",
      "Epoch 87, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.357 | Test Loss 0.405 \n",
      "Epoch 87, Step 1425 | Training Accuracy: 0.789 | Test Accuracy: 0.766 | Training Loss: 0.410 | Test Loss 0.498 \n",
      "Epoch 87, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.468 | Test Loss 0.338 \n",
      "Epoch 87, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.312 | Test Loss 0.385 \n",
      "Epoch 87, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.883 | Training Loss: 0.402 | Test Loss 0.315 \n",
      "Epoch 87, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.345 | Test Loss 0.415 \n",
      "Epoch 87, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.781 | Training Loss: 0.393 | Test Loss 0.435 \n",
      "(*) Entering Epoch 88 (8025.555 s)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 88, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.805 | Training Loss: 0.393 | Test Loss 0.466 \n",
      "Epoch 88, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.437 | Test Loss 0.384 \n",
      "Epoch 88, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.343 | Test Loss 0.332 \n",
      "Epoch 88, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.332 | Test Loss 0.410 \n",
      "Epoch 88, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.339 | Test Loss 0.409 \n",
      "Epoch 88, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.365 | Test Loss 0.420 \n",
      "Epoch 88, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.311 | Test Loss 0.334 \n",
      "Epoch 88, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.405 | Test Loss 0.432 \n",
      "(*) Entering Epoch 89 (8116.480 s)\n",
      "Epoch 89, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.363 | Test Loss 0.498 \n",
      "Epoch 89, Step 950 | Training Accuracy: 0.781 | Test Accuracy: 0.867 | Training Loss: 0.426 | Test Loss 0.315 \n",
      "Epoch 89, Step 1425 | Training Accuracy: 0.891 | Test Accuracy: 0.852 | Training Loss: 0.283 | Test Loss 0.356 \n",
      "Epoch 89, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.758 | Training Loss: 0.287 | Test Loss 0.510 \n",
      "Epoch 89, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.341 | Test Loss 0.363 \n",
      "Epoch 89, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.331 | Test Loss 0.396 \n",
      "Epoch 89, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.383 | Test Loss 0.365 \n",
      "Epoch 89, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.394 | Test Loss 0.459 \n",
      "(*) Entering Epoch 90 (8207.479 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch90.ckpt-90\n",
      "Epoch 90, Step 475 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.254 | Test Loss 0.418 \n",
      "Epoch 90, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.358 | Test Loss 0.368 \n",
      "Epoch 90, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.351 | Test Loss 0.312 \n",
      "Epoch 90, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.348 | Test Loss 0.489 \n",
      "Epoch 90, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.360 | Test Loss 0.394 \n",
      "Epoch 90, Step 2850 | Training Accuracy: 0.898 | Test Accuracy: 0.789 | Training Loss: 0.317 | Test Loss 0.420 \n",
      "Epoch 90, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.906 | Training Loss: 0.350 | Test Loss 0.283 \n",
      "Epoch 90, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.356 | Test Loss 0.402 \n",
      "(*) Entering Epoch 91 (8298.597 s)\n",
      "Epoch 91, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.337 | Test Loss 0.410 \n",
      "Epoch 91, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.867 | Training Loss: 0.292 | Test Loss 0.306 \n",
      "Epoch 91, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.294 | Test Loss 0.389 \n",
      "Epoch 91, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.758 | Training Loss: 0.286 | Test Loss 0.442 \n",
      "Epoch 91, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.383 | Test Loss 0.427 \n",
      "Epoch 91, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.356 | Test Loss 0.362 \n",
      "Epoch 91, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.329 | Test Loss 0.337 \n",
      "Epoch 91, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.306 | Test Loss 0.357 \n",
      "(*) Entering Epoch 92 (8389.520 s)\n",
      "Epoch 92, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.367 | Test Loss 0.438 \n",
      "Epoch 92, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.405 | Test Loss 0.383 \n",
      "Epoch 92, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.773 | Training Loss: 0.415 | Test Loss 0.427 \n",
      "Epoch 92, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.875 | Training Loss: 0.391 | Test Loss 0.303 \n",
      "Epoch 92, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.758 | Training Loss: 0.319 | Test Loss 0.449 \n",
      "Epoch 92, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.852 | Training Loss: 0.314 | Test Loss 0.357 \n",
      "Epoch 92, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.883 | Training Loss: 0.286 | Test Loss 0.277 \n",
      "Epoch 92, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.828 | Training Loss: 0.307 | Test Loss 0.413 \n",
      "(*) Entering Epoch 93 (8480.338 s)\n",
      "Epoch 93, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.297 | Test Loss 0.437 \n",
      "Epoch 93, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.345 | Test Loss 0.340 \n",
      "Epoch 93, Step 1425 | Training Accuracy: 0.891 | Test Accuracy: 0.820 | Training Loss: 0.304 | Test Loss 0.366 \n",
      "Epoch 93, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.336 | Test Loss 0.324 \n",
      "Epoch 93, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.309 | Test Loss 0.346 \n",
      "Epoch 93, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.859 | Training Loss: 0.338 | Test Loss 0.313 \n",
      "Epoch 93, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.703 | Training Loss: 0.319 | Test Loss 0.483 \n",
      "Epoch 93, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.316 | Test Loss 0.363 \n",
      "(*) Entering Epoch 94 (8571.291 s)\n",
      "Epoch 94, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.371 | Test Loss 0.387 \n",
      "Epoch 94, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.360 | Test Loss 0.408 \n",
      "Epoch 94, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.883 | Training Loss: 0.319 | Test Loss 0.303 \n",
      "Epoch 94, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.844 | Training Loss: 0.327 | Test Loss 0.370 \n",
      "Epoch 94, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.883 | Training Loss: 0.328 | Test Loss 0.335 \n",
      "Epoch 94, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.376 | Test Loss 0.349 \n",
      "Epoch 94, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.375 | Test Loss 0.375 \n",
      "Epoch 94, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.329 | Test Loss 0.423 \n",
      "(*) Entering Epoch 95 (8662.202 s)\n",
      "Epoch 95, Step 475 | Training Accuracy: 0.781 | Test Accuracy: 0.789 | Training Loss: 0.472 | Test Loss 0.477 \n",
      "Epoch 95, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.372 | Test Loss 0.378 \n",
      "Epoch 95, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.359 | Test Loss 0.298 \n",
      "Epoch 95, Step 1900 | Training Accuracy: 0.906 | Test Accuracy: 0.844 | Training Loss: 0.285 | Test Loss 0.414 \n",
      "Epoch 95, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.373 | Test Loss 0.402 \n",
      "Epoch 95, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.311 | Test Loss 0.425 \n",
      "Epoch 95, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.364 | Test Loss 0.348 \n",
      "Epoch 95, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.337 | Test Loss 0.341 \n",
      "(*) Entering Epoch 96 (8753.089 s)\n",
      "Epoch 96, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.797 | Training Loss: 0.415 | Test Loss 0.424 \n",
      "Epoch 96, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.316 | Test Loss 0.440 \n",
      "Epoch 96, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.386 | Test Loss 0.331 \n",
      "Epoch 96, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.292 | Test Loss 0.361 \n",
      "Epoch 96, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.330 | Test Loss 0.374 \n",
      "Epoch 96, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.331 | Test Loss 0.412 \n",
      "Epoch 96, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.883 | Training Loss: 0.350 | Test Loss 0.360 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 96, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.351 | Test Loss 0.432 \n",
      "(*) Entering Epoch 97 (8844.074 s)\n",
      "Epoch 97, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.805 | Training Loss: 0.364 | Test Loss 0.431 \n",
      "Epoch 97, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.867 | Training Loss: 0.375 | Test Loss 0.326 \n",
      "Epoch 97, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.859 | Training Loss: 0.286 | Test Loss 0.302 \n",
      "Epoch 97, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.852 | Training Loss: 0.381 | Test Loss 0.354 \n",
      "Epoch 97, Step 2375 | Training Accuracy: 0.898 | Test Accuracy: 0.852 | Training Loss: 0.288 | Test Loss 0.317 \n",
      "Epoch 97, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.852 | Training Loss: 0.381 | Test Loss 0.387 \n",
      "Epoch 97, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.396 | Test Loss 0.348 \n",
      "Epoch 97, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.369 | Test Loss 0.308 \n",
      "(*) Entering Epoch 98 (8935.067 s)\n",
      "Epoch 98, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.883 | Training Loss: 0.340 | Test Loss 0.298 \n",
      "Epoch 98, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.332 | Test Loss 0.387 \n",
      "Epoch 98, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.277 | Test Loss 0.357 \n",
      "Epoch 98, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.330 | Test Loss 0.326 \n",
      "Epoch 98, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.898 | Training Loss: 0.349 | Test Loss 0.264 \n",
      "Epoch 98, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.758 | Training Loss: 0.370 | Test Loss 0.470 \n",
      "Epoch 98, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.372 | Test Loss 0.363 \n",
      "Epoch 98, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.394 | Test Loss 0.376 \n",
      "(*) Entering Epoch 99 (9025.974 s)\n",
      "Epoch 99, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.742 | Training Loss: 0.325 | Test Loss 0.460 \n",
      "Epoch 99, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.341 | Test Loss 0.333 \n",
      "Epoch 99, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.331 | Test Loss 0.290 \n",
      "Epoch 99, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.852 | Training Loss: 0.392 | Test Loss 0.381 \n",
      "Epoch 99, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.457 | Test Loss 0.444 \n",
      "Epoch 99, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.906 | Training Loss: 0.363 | Test Loss 0.324 \n",
      "Epoch 99, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.342 | Test Loss 0.403 \n",
      "Epoch 99, Step 3800 | Training Accuracy: 0.781 | Test Accuracy: 0.891 | Training Loss: 0.491 | Test Loss 0.268 \n",
      "(*) Entering Epoch 100 (9116.812 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch100.ckpt-100\n",
      "Epoch 100, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.343 | Test Loss 0.334 \n",
      "Epoch 100, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.875 | Training Loss: 0.327 | Test Loss 0.334 \n",
      "Epoch 100, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.372 | Test Loss 0.345 \n",
      "Epoch 100, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.355 | Test Loss 0.407 \n",
      "Epoch 100, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.388 | Test Loss 0.390 \n",
      "Epoch 100, Step 2850 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.457 | Test Loss 0.343 \n",
      "Epoch 100, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.347 | Test Loss 0.444 \n",
      "Epoch 100, Step 3800 | Training Accuracy: 0.758 | Test Accuracy: 0.859 | Training Loss: 0.486 | Test Loss 0.382 \n",
      "(*) Entering Epoch 101 (9207.849 s)\n",
      "Epoch 101, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.359 | Test Loss 0.390 \n",
      "Epoch 101, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.883 | Training Loss: 0.384 | Test Loss 0.320 \n",
      "Epoch 101, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.374 | Test Loss 0.397 \n",
      "Epoch 101, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.789 | Training Loss: 0.356 | Test Loss 0.453 \n",
      "Epoch 101, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.369 | Test Loss 0.439 \n",
      "Epoch 101, Step 2850 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.376 | Test Loss 0.293 \n",
      "Epoch 101, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.284 | Test Loss 0.414 \n",
      "Epoch 101, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.875 | Training Loss: 0.395 | Test Loss 0.293 \n",
      "(*) Entering Epoch 102 (9298.705 s)\n",
      "Epoch 102, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.393 | Test Loss 0.366 \n",
      "Epoch 102, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.859 | Training Loss: 0.452 | Test Loss 0.326 \n",
      "Epoch 102, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.302 | Test Loss 0.371 \n",
      "Epoch 102, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.357 | Test Loss 0.438 \n",
      "Epoch 102, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.334 | Test Loss 0.336 \n",
      "Epoch 102, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.311 | Test Loss 0.326 \n",
      "Epoch 102, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.773 | Training Loss: 0.291 | Test Loss 0.538 \n",
      "Epoch 102, Step 3800 | Training Accuracy: 0.891 | Test Accuracy: 0.867 | Training Loss: 0.280 | Test Loss 0.403 \n",
      "(*) Entering Epoch 103 (9389.611 s)\n",
      "Epoch 103, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.797 | Training Loss: 0.385 | Test Loss 0.403 \n",
      "Epoch 103, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.325 | Test Loss 0.419 \n",
      "Epoch 103, Step 1425 | Training Accuracy: 0.766 | Test Accuracy: 0.859 | Training Loss: 0.464 | Test Loss 0.367 \n",
      "Epoch 103, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.906 | Training Loss: 0.365 | Test Loss 0.292 \n",
      "Epoch 103, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.354 | Test Loss 0.461 \n",
      "Epoch 103, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.309 | Test Loss 0.304 \n",
      "Epoch 103, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.883 | Training Loss: 0.359 | Test Loss 0.304 \n",
      "Epoch 103, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.362 | Test Loss 0.319 \n",
      "(*) Entering Epoch 104 (9480.482 s)\n",
      "Epoch 104, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.366 | Test Loss 0.366 \n",
      "Epoch 104, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.773 | Training Loss: 0.361 | Test Loss 0.514 \n",
      "Epoch 104, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.414 | Test Loss 0.312 \n",
      "Epoch 104, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.344 | Test Loss 0.436 \n",
      "Epoch 104, Step 2375 | Training Accuracy: 0.898 | Test Accuracy: 0.859 | Training Loss: 0.347 | Test Loss 0.345 \n",
      "Epoch 104, Step 2850 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.359 | Test Loss 0.388 \n",
      "Epoch 104, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.344 | Test Loss 0.308 \n",
      "Epoch 104, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.362 | Test Loss 0.442 \n",
      "(*) Entering Epoch 105 (9571.372 s)\n",
      "Epoch 105, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.353 | Test Loss 0.415 \n",
      "Epoch 105, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.293 | Test Loss 0.366 \n",
      "Epoch 105, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.332 | Test Loss 0.400 \n",
      "Epoch 105, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.766 | Training Loss: 0.325 | Test Loss 0.456 \n",
      "Epoch 105, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.381 | Test Loss 0.480 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 105, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.336 | Test Loss 0.362 \n",
      "Epoch 105, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.361 | Test Loss 0.308 \n",
      "Epoch 105, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.369 | Test Loss 0.364 \n",
      "(*) Entering Epoch 106 (9662.235 s)\n",
      "Epoch 106, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.318 | Test Loss 0.374 \n",
      "Epoch 106, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.734 | Training Loss: 0.320 | Test Loss 0.552 \n",
      "Epoch 106, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.852 | Training Loss: 0.312 | Test Loss 0.354 \n",
      "Epoch 106, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.820 | Training Loss: 0.408 | Test Loss 0.434 \n",
      "Epoch 106, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.380 | Test Loss 0.450 \n",
      "Epoch 106, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.322 | Test Loss 0.307 \n",
      "Epoch 106, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.766 | Training Loss: 0.317 | Test Loss 0.431 \n",
      "Epoch 106, Step 3800 | Training Accuracy: 0.891 | Test Accuracy: 0.836 | Training Loss: 0.285 | Test Loss 0.383 \n",
      "(*) Entering Epoch 107 (9753.089 s)\n",
      "Epoch 107, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.349 | Test Loss 0.428 \n",
      "Epoch 107, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.349 | Test Loss 0.417 \n",
      "Epoch 107, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.836 | Training Loss: 0.339 | Test Loss 0.396 \n",
      "Epoch 107, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.391 | Test Loss 0.392 \n",
      "Epoch 107, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.410 | Test Loss 0.432 \n",
      "Epoch 107, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.875 | Training Loss: 0.322 | Test Loss 0.322 \n",
      "Epoch 107, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.337 | Test Loss 0.407 \n",
      "Epoch 107, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.328 | Test Loss 0.370 \n",
      "(*) Entering Epoch 108 (9843.992 s)\n",
      "Epoch 108, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.812 | Training Loss: 0.376 | Test Loss 0.386 \n",
      "Epoch 108, Step 950 | Training Accuracy: 0.797 | Test Accuracy: 0.781 | Training Loss: 0.450 | Test Loss 0.441 \n",
      "Epoch 108, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.432 | Test Loss 0.358 \n",
      "Epoch 108, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.322 | Test Loss 0.447 \n",
      "Epoch 108, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.357 | Test Loss 0.375 \n",
      "Epoch 108, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.279 | Test Loss 0.364 \n",
      "Epoch 108, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.820 | Training Loss: 0.454 | Test Loss 0.442 \n",
      "Epoch 108, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.883 | Training Loss: 0.359 | Test Loss 0.305 \n",
      "(*) Entering Epoch 109 (9934.874 s)\n",
      "Epoch 109, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.382 | Test Loss 0.394 \n",
      "Epoch 109, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.289 | Test Loss 0.412 \n",
      "Epoch 109, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.308 | Test Loss 0.453 \n",
      "Epoch 109, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.773 | Training Loss: 0.359 | Test Loss 0.413 \n",
      "Epoch 109, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.386 | Test Loss 0.348 \n",
      "Epoch 109, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.781 | Training Loss: 0.297 | Test Loss 0.432 \n",
      "Epoch 109, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.758 | Training Loss: 0.305 | Test Loss 0.480 \n",
      "Epoch 109, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.914 | Training Loss: 0.333 | Test Loss 0.288 \n",
      "(*) Entering Epoch 110 (10025.764 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch110.ckpt-110\n",
      "Epoch 110, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.914 | Training Loss: 0.280 | Test Loss 0.258 \n",
      "Epoch 110, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.378 | Test Loss 0.458 \n",
      "Epoch 110, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.367 | Test Loss 0.427 \n",
      "Epoch 110, Step 1900 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.427 | Test Loss 0.344 \n",
      "Epoch 110, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.412 | Test Loss 0.393 \n",
      "Epoch 110, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.883 | Training Loss: 0.339 | Test Loss 0.342 \n",
      "Epoch 110, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.789 | Training Loss: 0.448 | Test Loss 0.387 \n",
      "Epoch 110, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.337 | Test Loss 0.390 \n",
      "(*) Entering Epoch 111 (10116.921 s)\n",
      "Epoch 111, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.867 | Training Loss: 0.361 | Test Loss 0.382 \n",
      "Epoch 111, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.325 | Test Loss 0.345 \n",
      "Epoch 111, Step 1425 | Training Accuracy: 0.898 | Test Accuracy: 0.812 | Training Loss: 0.278 | Test Loss 0.376 \n",
      "Epoch 111, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.377 | Test Loss 0.333 \n",
      "Epoch 111, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.898 | Training Loss: 0.299 | Test Loss 0.286 \n",
      "Epoch 111, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.374 | Test Loss 0.360 \n",
      "Epoch 111, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.891 | Training Loss: 0.320 | Test Loss 0.282 \n",
      "Epoch 111, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.330 | Test Loss 0.306 \n",
      "(*) Entering Epoch 112 (10207.701 s)\n",
      "Epoch 112, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.898 | Training Loss: 0.385 | Test Loss 0.323 \n",
      "Epoch 112, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.322 | Test Loss 0.362 \n",
      "Epoch 112, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.734 | Training Loss: 0.363 | Test Loss 0.485 \n",
      "Epoch 112, Step 1900 | Training Accuracy: 0.766 | Test Accuracy: 0.891 | Training Loss: 0.455 | Test Loss 0.325 \n",
      "Epoch 112, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.269 | Test Loss 0.396 \n",
      "Epoch 112, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.302 | Test Loss 0.302 \n",
      "Epoch 112, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.283 | Test Loss 0.474 \n",
      "Epoch 112, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.439 | Test Loss 0.369 \n",
      "(*) Entering Epoch 113 (10298.549 s)\n",
      "Epoch 113, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.412 | Test Loss 0.405 \n",
      "Epoch 113, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.380 | Test Loss 0.436 \n",
      "Epoch 113, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.852 | Training Loss: 0.413 | Test Loss 0.330 \n",
      "Epoch 113, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.828 | Training Loss: 0.370 | Test Loss 0.397 \n",
      "Epoch 113, Step 2375 | Training Accuracy: 0.891 | Test Accuracy: 0.797 | Training Loss: 0.282 | Test Loss 0.382 \n",
      "Epoch 113, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.875 | Training Loss: 0.374 | Test Loss 0.324 \n",
      "Epoch 113, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.430 | Test Loss 0.402 \n",
      "Epoch 113, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.891 | Training Loss: 0.391 | Test Loss 0.312 \n",
      "(*) Entering Epoch 114 (10389.435 s)\n",
      "Epoch 114, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.390 | Test Loss 0.363 \n",
      "Epoch 114, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.324 | Test Loss 0.362 \n",
      "Epoch 114, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.360 | Test Loss 0.383 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 114, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.371 | Test Loss 0.402 \n",
      "Epoch 114, Step 2375 | Training Accuracy: 0.891 | Test Accuracy: 0.867 | Training Loss: 0.315 | Test Loss 0.305 \n",
      "Epoch 114, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.773 | Training Loss: 0.296 | Test Loss 0.421 \n",
      "Epoch 114, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.898 | Training Loss: 0.333 | Test Loss 0.325 \n",
      "Epoch 114, Step 3800 | Training Accuracy: 0.906 | Test Accuracy: 0.852 | Training Loss: 0.306 | Test Loss 0.320 \n",
      "(*) Entering Epoch 115 (10480.267 s)\n",
      "Epoch 115, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.315 | Test Loss 0.387 \n",
      "Epoch 115, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.758 | Training Loss: 0.316 | Test Loss 0.517 \n",
      "Epoch 115, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.337 | Test Loss 0.440 \n",
      "Epoch 115, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.334 | Test Loss 0.384 \n",
      "Epoch 115, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.340 | Test Loss 0.381 \n",
      "Epoch 115, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.355 | Test Loss 0.341 \n",
      "Epoch 115, Step 3325 | Training Accuracy: 0.914 | Test Accuracy: 0.781 | Training Loss: 0.274 | Test Loss 0.479 \n",
      "Epoch 115, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.327 | Test Loss 0.388 \n",
      "(*) Entering Epoch 116 (10571.140 s)\n",
      "Epoch 116, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.805 | Training Loss: 0.250 | Test Loss 0.390 \n",
      "Epoch 116, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.365 | Test Loss 0.363 \n",
      "Epoch 116, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.283 | Test Loss 0.404 \n",
      "Epoch 116, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.351 | Test Loss 0.412 \n",
      "Epoch 116, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.333 | Test Loss 0.409 \n",
      "Epoch 116, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.361 | Test Loss 0.321 \n",
      "Epoch 116, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.319 | Test Loss 0.434 \n",
      "Epoch 116, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.266 | Test Loss 0.351 \n",
      "(*) Entering Epoch 117 (10662.020 s)\n",
      "Epoch 117, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.875 | Training Loss: 0.348 | Test Loss 0.297 \n",
      "Epoch 117, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.852 | Training Loss: 0.291 | Test Loss 0.310 \n",
      "Epoch 117, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.758 | Training Loss: 0.337 | Test Loss 0.445 \n",
      "Epoch 117, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.353 | Test Loss 0.353 \n",
      "Epoch 117, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.898 | Training Loss: 0.298 | Test Loss 0.327 \n",
      "Epoch 117, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.322 | Test Loss 0.333 \n",
      "Epoch 117, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.314 | Test Loss 0.302 \n",
      "Epoch 117, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.405 | Test Loss 0.363 \n",
      "(*) Entering Epoch 118 (10752.830 s)\n",
      "Epoch 118, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.805 | Training Loss: 0.410 | Test Loss 0.403 \n",
      "Epoch 118, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.875 | Training Loss: 0.379 | Test Loss 0.277 \n",
      "Epoch 118, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.363 | Test Loss 0.341 \n",
      "Epoch 118, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.812 | Training Loss: 0.354 | Test Loss 0.372 \n",
      "Epoch 118, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.773 | Training Loss: 0.350 | Test Loss 0.407 \n",
      "Epoch 118, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.773 | Training Loss: 0.345 | Test Loss 0.439 \n",
      "Epoch 118, Step 3325 | Training Accuracy: 0.914 | Test Accuracy: 0.844 | Training Loss: 0.263 | Test Loss 0.361 \n",
      "Epoch 118, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.325 | Test Loss 0.394 \n",
      "(*) Entering Epoch 119 (10843.700 s)\n",
      "Epoch 119, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.323 | Test Loss 0.363 \n",
      "Epoch 119, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.742 | Training Loss: 0.399 | Test Loss 0.481 \n",
      "Epoch 119, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.789 | Training Loss: 0.340 | Test Loss 0.423 \n",
      "Epoch 119, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.781 | Training Loss: 0.288 | Test Loss 0.406 \n",
      "Epoch 119, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.312 | Test Loss 0.451 \n",
      "Epoch 119, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.370 | Test Loss 0.341 \n",
      "Epoch 119, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.286 | Test Loss 0.318 \n",
      "Epoch 119, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.289 | Test Loss 0.372 \n",
      "(*) Entering Epoch 120 (10934.532 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch120.ckpt-120\n",
      "Epoch 120, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.828 | Training Loss: 0.266 | Test Loss 0.442 \n",
      "Epoch 120, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.363 | Test Loss 0.402 \n",
      "Epoch 120, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.852 | Training Loss: 0.323 | Test Loss 0.317 \n",
      "Epoch 120, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.844 | Training Loss: 0.355 | Test Loss 0.332 \n",
      "Epoch 120, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.859 | Training Loss: 0.401 | Test Loss 0.328 \n",
      "Epoch 120, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.781 | Training Loss: 0.313 | Test Loss 0.460 \n",
      "Epoch 120, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.275 | Test Loss 0.354 \n",
      "Epoch 120, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.333 | Test Loss 0.315 \n",
      "(*) Entering Epoch 121 (11025.694 s)\n",
      "Epoch 121, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.366 | Test Loss 0.397 \n",
      "Epoch 121, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.867 | Training Loss: 0.373 | Test Loss 0.331 \n",
      "Epoch 121, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.400 | Test Loss 0.376 \n",
      "Epoch 121, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.758 | Training Loss: 0.374 | Test Loss 0.501 \n",
      "Epoch 121, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.867 | Training Loss: 0.254 | Test Loss 0.324 \n",
      "Epoch 121, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.727 | Training Loss: 0.375 | Test Loss 0.475 \n",
      "Epoch 121, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.859 | Training Loss: 0.318 | Test Loss 0.364 \n",
      "Epoch 121, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.347 | Test Loss 0.351 \n",
      "(*) Entering Epoch 122 (11116.445 s)\n",
      "Epoch 122, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.388 | Test Loss 0.504 \n",
      "Epoch 122, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.384 | Test Loss 0.328 \n",
      "Epoch 122, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.313 | Test Loss 0.374 \n",
      "Epoch 122, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.325 | Test Loss 0.329 \n",
      "Epoch 122, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.358 | Test Loss 0.376 \n",
      "Epoch 122, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.382 | Test Loss 0.413 \n",
      "Epoch 122, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.279 | Test Loss 0.433 \n",
      "Epoch 122, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.852 | Training Loss: 0.360 | Test Loss 0.381 \n",
      "(*) Entering Epoch 123 (11207.330 s)\n",
      "Epoch 123, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.781 | Training Loss: 0.406 | Test Loss 0.466 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 123, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.421 | Test Loss 0.371 \n",
      "Epoch 123, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.329 | Test Loss 0.292 \n",
      "Epoch 123, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.301 | Test Loss 0.330 \n",
      "Epoch 123, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.342 | Test Loss 0.375 \n",
      "Epoch 123, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.283 | Test Loss 0.438 \n",
      "Epoch 123, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.407 | Test Loss 0.372 \n",
      "Epoch 123, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.312 | Test Loss 0.418 \n",
      "(*) Entering Epoch 124 (11298.238 s)\n",
      "Epoch 124, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.394 | Test Loss 0.342 \n",
      "Epoch 124, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.335 | Test Loss 0.380 \n",
      "Epoch 124, Step 1425 | Training Accuracy: 0.906 | Test Accuracy: 0.820 | Training Loss: 0.256 | Test Loss 0.378 \n",
      "Epoch 124, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.875 | Training Loss: 0.360 | Test Loss 0.294 \n",
      "Epoch 124, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.332 | Test Loss 0.400 \n",
      "Epoch 124, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.875 | Training Loss: 0.339 | Test Loss 0.291 \n",
      "Epoch 124, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.390 | Test Loss 0.353 \n",
      "Epoch 124, Step 3800 | Training Accuracy: 0.898 | Test Accuracy: 0.828 | Training Loss: 0.287 | Test Loss 0.381 \n",
      "(*) Entering Epoch 125 (11389.104 s)\n",
      "Epoch 125, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.758 | Training Loss: 0.401 | Test Loss 0.475 \n",
      "Epoch 125, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.742 | Training Loss: 0.322 | Test Loss 0.519 \n",
      "Epoch 125, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.324 | Test Loss 0.362 \n",
      "Epoch 125, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.375 | Test Loss 0.328 \n",
      "Epoch 125, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.363 | Test Loss 0.393 \n",
      "Epoch 125, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.358 | Test Loss 0.376 \n",
      "Epoch 125, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.836 | Training Loss: 0.282 | Test Loss 0.360 \n",
      "Epoch 125, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.345 | Test Loss 0.358 \n",
      "(*) Entering Epoch 126 (11479.965 s)\n",
      "Epoch 126, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.320 | Test Loss 0.336 \n",
      "Epoch 126, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.302 | Test Loss 0.459 \n",
      "Epoch 126, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.323 | Test Loss 0.419 \n",
      "Epoch 126, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.361 | Test Loss 0.371 \n",
      "Epoch 126, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.344 | Test Loss 0.384 \n",
      "Epoch 126, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.368 | Test Loss 0.343 \n",
      "Epoch 126, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.304 | Test Loss 0.367 \n",
      "Epoch 126, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.773 | Training Loss: 0.323 | Test Loss 0.450 \n",
      "(*) Entering Epoch 127 (11570.920 s)\n",
      "Epoch 127, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.906 | Training Loss: 0.272 | Test Loss 0.321 \n",
      "Epoch 127, Step 950 | Training Accuracy: 0.812 | Test Accuracy: 0.828 | Training Loss: 0.416 | Test Loss 0.362 \n",
      "Epoch 127, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.326 | Test Loss 0.317 \n",
      "Epoch 127, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.711 | Training Loss: 0.338 | Test Loss 0.547 \n",
      "Epoch 127, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.338 | Test Loss 0.304 \n",
      "Epoch 127, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.852 | Training Loss: 0.357 | Test Loss 0.366 \n",
      "Epoch 127, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.300 | Test Loss 0.326 \n",
      "Epoch 127, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.378 | Test Loss 0.394 \n",
      "(*) Entering Epoch 128 (11661.833 s)\n",
      "Epoch 128, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.859 | Training Loss: 0.340 | Test Loss 0.320 \n",
      "Epoch 128, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.344 | Test Loss 0.426 \n",
      "Epoch 128, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.324 | Test Loss 0.357 \n",
      "Epoch 128, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.301 | Test Loss 0.426 \n",
      "Epoch 128, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.387 | Test Loss 0.490 \n",
      "Epoch 128, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.363 | Test Loss 0.388 \n",
      "Epoch 128, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.797 | Training Loss: 0.374 | Test Loss 0.425 \n",
      "Epoch 128, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.766 | Training Loss: 0.349 | Test Loss 0.453 \n",
      "(*) Entering Epoch 129 (11752.726 s)\n",
      "Epoch 129, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.385 | Test Loss 0.376 \n",
      "Epoch 129, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.433 | Test Loss 0.374 \n",
      "Epoch 129, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.333 | Test Loss 0.368 \n",
      "Epoch 129, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.318 | Test Loss 0.389 \n",
      "Epoch 129, Step 2375 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.307 | Test Loss 0.339 \n",
      "Epoch 129, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.361 | Test Loss 0.354 \n",
      "Epoch 129, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.797 | Training Loss: 0.427 | Test Loss 0.419 \n",
      "Epoch 129, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.773 | Training Loss: 0.364 | Test Loss 0.504 \n",
      "(*) Entering Epoch 130 (11843.559 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch130.ckpt-130\n",
      "Epoch 130, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.281 | Test Loss 0.478 \n",
      "Epoch 130, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.404 | Test Loss 0.301 \n",
      "Epoch 130, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.734 | Training Loss: 0.326 | Test Loss 0.451 \n",
      "Epoch 130, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.797 | Training Loss: 0.348 | Test Loss 0.450 \n",
      "Epoch 130, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.766 | Training Loss: 0.360 | Test Loss 0.478 \n",
      "Epoch 130, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.898 | Training Loss: 0.344 | Test Loss 0.321 \n",
      "Epoch 130, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.344 | Test Loss 0.405 \n",
      "Epoch 130, Step 3800 | Training Accuracy: 0.906 | Test Accuracy: 0.852 | Training Loss: 0.297 | Test Loss 0.315 \n",
      "(*) Entering Epoch 131 (11934.714 s)\n",
      "Epoch 131, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.883 | Training Loss: 0.279 | Test Loss 0.370 \n",
      "Epoch 131, Step 950 | Training Accuracy: 0.773 | Test Accuracy: 0.797 | Training Loss: 0.459 | Test Loss 0.426 \n",
      "Epoch 131, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.322 | Test Loss 0.459 \n",
      "Epoch 131, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.883 | Training Loss: 0.357 | Test Loss 0.268 \n",
      "Epoch 131, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.309 | Test Loss 0.332 \n",
      "Epoch 131, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.314 | Test Loss 0.306 \n",
      "Epoch 131, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.307 | Test Loss 0.325 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 131, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.805 | Training Loss: 0.368 | Test Loss 0.433 \n",
      "(*) Entering Epoch 132 (12025.587 s)\n",
      "Epoch 132, Step 475 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.377 | Test Loss 0.457 \n",
      "Epoch 132, Step 950 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.413 | Test Loss 0.375 \n",
      "Epoch 132, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.293 | Test Loss 0.359 \n",
      "Epoch 132, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.365 | Test Loss 0.358 \n",
      "Epoch 132, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.358 | Test Loss 0.406 \n",
      "Epoch 132, Step 2850 | Training Accuracy: 0.789 | Test Accuracy: 0.914 | Training Loss: 0.398 | Test Loss 0.279 \n",
      "Epoch 132, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.344 | Test Loss 0.464 \n",
      "Epoch 132, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.773 | Training Loss: 0.303 | Test Loss 0.448 \n",
      "(*) Entering Epoch 133 (12116.520 s)\n",
      "Epoch 133, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.351 | Test Loss 0.359 \n",
      "Epoch 133, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.426 | Test Loss 0.438 \n",
      "Epoch 133, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.314 | Test Loss 0.358 \n",
      "Epoch 133, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.867 | Training Loss: 0.337 | Test Loss 0.322 \n",
      "Epoch 133, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.828 | Training Loss: 0.371 | Test Loss 0.350 \n",
      "Epoch 133, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.350 | Test Loss 0.370 \n",
      "Epoch 133, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.781 | Training Loss: 0.376 | Test Loss 0.568 \n",
      "Epoch 133, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.374 | Test Loss 0.308 \n",
      "(*) Entering Epoch 134 (12207.361 s)\n",
      "Epoch 134, Step 475 | Training Accuracy: 0.891 | Test Accuracy: 0.867 | Training Loss: 0.253 | Test Loss 0.345 \n",
      "Epoch 134, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.356 | Test Loss 0.294 \n",
      "Epoch 134, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.820 | Training Loss: 0.285 | Test Loss 0.424 \n",
      "Epoch 134, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.914 | Training Loss: 0.330 | Test Loss 0.227 \n",
      "Epoch 134, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.333 | Test Loss 0.413 \n",
      "Epoch 134, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.750 | Training Loss: 0.338 | Test Loss 0.499 \n",
      "Epoch 134, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.812 | Training Loss: 0.268 | Test Loss 0.378 \n",
      "Epoch 134, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.388 | Test Loss 0.373 \n",
      "(*) Entering Epoch 135 (12298.255 s)\n",
      "Epoch 135, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.773 | Training Loss: 0.418 | Test Loss 0.493 \n",
      "Epoch 135, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.330 | Test Loss 0.426 \n",
      "Epoch 135, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.370 | Test Loss 0.362 \n",
      "Epoch 135, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.797 | Training Loss: 0.364 | Test Loss 0.358 \n",
      "Epoch 135, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.310 | Test Loss 0.366 \n",
      "Epoch 135, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.295 | Test Loss 0.448 \n",
      "Epoch 135, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.820 | Training Loss: 0.356 | Test Loss 0.465 \n",
      "Epoch 135, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.345 | Test Loss 0.326 \n",
      "(*) Entering Epoch 136 (12389.130 s)\n",
      "Epoch 136, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.335 | Test Loss 0.411 \n",
      "Epoch 136, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.344 | Test Loss 0.354 \n",
      "Epoch 136, Step 1425 | Training Accuracy: 0.805 | Test Accuracy: 0.797 | Training Loss: 0.395 | Test Loss 0.406 \n",
      "Epoch 136, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.805 | Training Loss: 0.294 | Test Loss 0.476 \n",
      "Epoch 136, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.309 | Test Loss 0.419 \n",
      "Epoch 136, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.371 | Test Loss 0.404 \n",
      "Epoch 136, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.316 | Test Loss 0.359 \n",
      "Epoch 136, Step 3800 | Training Accuracy: 0.945 | Test Accuracy: 0.852 | Training Loss: 0.247 | Test Loss 0.364 \n",
      "(*) Entering Epoch 137 (12480.173 s)\n",
      "Epoch 137, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.307 | Test Loss 0.383 \n",
      "Epoch 137, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.281 | Test Loss 0.363 \n",
      "Epoch 137, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.742 | Training Loss: 0.320 | Test Loss 0.491 \n",
      "Epoch 137, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.311 | Test Loss 0.346 \n",
      "Epoch 137, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.346 | Test Loss 0.389 \n",
      "Epoch 137, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.365 | Test Loss 0.371 \n",
      "Epoch 137, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.284 | Test Loss 0.473 \n",
      "Epoch 137, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.344 | Test Loss 0.371 \n",
      "(*) Entering Epoch 138 (12571.093 s)\n",
      "Epoch 138, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.335 | Test Loss 0.371 \n",
      "Epoch 138, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.322 | Test Loss 0.325 \n",
      "Epoch 138, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.389 | Test Loss 0.426 \n",
      "Epoch 138, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.773 | Training Loss: 0.344 | Test Loss 0.425 \n",
      "Epoch 138, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.766 | Training Loss: 0.387 | Test Loss 0.501 \n",
      "Epoch 138, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.891 | Training Loss: 0.332 | Test Loss 0.346 \n",
      "Epoch 138, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.347 | Test Loss 0.338 \n",
      "Epoch 138, Step 3800 | Training Accuracy: 0.781 | Test Accuracy: 0.781 | Training Loss: 0.478 | Test Loss 0.496 \n",
      "(*) Entering Epoch 139 (12661.975 s)\n",
      "Epoch 139, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.336 | Test Loss 0.403 \n",
      "Epoch 139, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.805 | Training Loss: 0.361 | Test Loss 0.428 \n",
      "Epoch 139, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.380 | Test Loss 0.388 \n",
      "Epoch 139, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.302 | Test Loss 0.337 \n",
      "Epoch 139, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.805 | Training Loss: 0.304 | Test Loss 0.381 \n",
      "Epoch 139, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.339 | Test Loss 0.528 \n",
      "Epoch 139, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.411 | Test Loss 0.437 \n",
      "Epoch 139, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.273 | Test Loss 0.373 \n",
      "(*) Entering Epoch 140 (12752.792 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch140.ckpt-140\n",
      "Epoch 140, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.326 | Test Loss 0.310 \n",
      "Epoch 140, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.334 | Test Loss 0.362 \n",
      "Epoch 140, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.308 | Test Loss 0.465 \n",
      "Epoch 140, Step 1900 | Training Accuracy: 0.906 | Test Accuracy: 0.820 | Training Loss: 0.267 | Test Loss 0.399 \n",
      "Epoch 140, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.329 | Test Loss 0.359 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 140, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.875 | Training Loss: 0.338 | Test Loss 0.325 \n",
      "Epoch 140, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.914 | Training Loss: 0.397 | Test Loss 0.245 \n",
      "Epoch 140, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.332 | Test Loss 0.313 \n",
      "(*) Entering Epoch 141 (12843.893 s)\n",
      "Epoch 141, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.276 | Test Loss 0.392 \n",
      "Epoch 141, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.457 | Test Loss 0.342 \n",
      "Epoch 141, Step 1425 | Training Accuracy: 0.906 | Test Accuracy: 0.836 | Training Loss: 0.294 | Test Loss 0.341 \n",
      "Epoch 141, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.302 | Test Loss 0.376 \n",
      "Epoch 141, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.820 | Training Loss: 0.441 | Test Loss 0.371 \n",
      "Epoch 141, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.734 | Training Loss: 0.335 | Test Loss 0.527 \n",
      "Epoch 141, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.773 | Training Loss: 0.325 | Test Loss 0.458 \n",
      "Epoch 141, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.443 | Test Loss 0.389 \n",
      "(*) Entering Epoch 142 (12934.781 s)\n",
      "Epoch 142, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.310 | Test Loss 0.347 \n",
      "Epoch 142, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.283 | Test Loss 0.370 \n",
      "Epoch 142, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.302 | Test Loss 0.408 \n",
      "Epoch 142, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.368 | Test Loss 0.386 \n",
      "Epoch 142, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.323 | Test Loss 0.368 \n",
      "Epoch 142, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.327 | Test Loss 0.417 \n",
      "Epoch 142, Step 3325 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.316 | Test Loss 0.362 \n",
      "Epoch 142, Step 3800 | Training Accuracy: 0.891 | Test Accuracy: 0.789 | Training Loss: 0.271 | Test Loss 0.469 \n",
      "(*) Entering Epoch 143 (13025.595 s)\n",
      "Epoch 143, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.452 | Test Loss 0.356 \n",
      "Epoch 143, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.276 | Test Loss 0.331 \n",
      "Epoch 143, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.812 | Training Loss: 0.354 | Test Loss 0.415 \n",
      "Epoch 143, Step 1900 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.378 | Test Loss 0.391 \n",
      "Epoch 143, Step 2375 | Training Accuracy: 0.906 | Test Accuracy: 0.852 | Training Loss: 0.270 | Test Loss 0.435 \n",
      "Epoch 143, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.279 | Test Loss 0.421 \n",
      "Epoch 143, Step 3325 | Training Accuracy: 0.906 | Test Accuracy: 0.820 | Training Loss: 0.256 | Test Loss 0.389 \n",
      "Epoch 143, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.781 | Training Loss: 0.321 | Test Loss 0.418 \n",
      "(*) Entering Epoch 144 (13116.426 s)\n",
      "Epoch 144, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.296 | Test Loss 0.331 \n",
      "Epoch 144, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.293 | Test Loss 0.416 \n",
      "Epoch 144, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.310 | Test Loss 0.315 \n",
      "Epoch 144, Step 1900 | Training Accuracy: 0.898 | Test Accuracy: 0.805 | Training Loss: 0.317 | Test Loss 0.401 \n",
      "Epoch 144, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.797 | Training Loss: 0.308 | Test Loss 0.420 \n",
      "Epoch 144, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.313 | Test Loss 0.419 \n",
      "Epoch 144, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.781 | Training Loss: 0.390 | Test Loss 0.403 \n",
      "Epoch 144, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.820 | Training Loss: 0.338 | Test Loss 0.380 \n",
      "(*) Entering Epoch 145 (13207.297 s)\n",
      "Epoch 145, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.342 | Test Loss 0.377 \n",
      "Epoch 145, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.355 | Test Loss 0.430 \n",
      "Epoch 145, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.431 | Test Loss 0.332 \n",
      "Epoch 145, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.875 | Training Loss: 0.351 | Test Loss 0.349 \n",
      "Epoch 145, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.891 | Training Loss: 0.371 | Test Loss 0.284 \n",
      "Epoch 145, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.381 | Test Loss 0.388 \n",
      "Epoch 145, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.323 | Test Loss 0.413 \n",
      "Epoch 145, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.325 | Test Loss 0.453 \n",
      "(*) Entering Epoch 146 (13298.161 s)\n",
      "Epoch 146, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.308 | Test Loss 0.433 \n",
      "Epoch 146, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.859 | Training Loss: 0.368 | Test Loss 0.304 \n",
      "Epoch 146, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.898 | Training Loss: 0.271 | Test Loss 0.299 \n",
      "Epoch 146, Step 1900 | Training Accuracy: 0.828 | Test Accuracy: 0.844 | Training Loss: 0.335 | Test Loss 0.377 \n",
      "Epoch 146, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.750 | Training Loss: 0.328 | Test Loss 0.493 \n",
      "Epoch 146, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.315 | Test Loss 0.355 \n",
      "Epoch 146, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.301 | Test Loss 0.472 \n",
      "Epoch 146, Step 3800 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.394 | Test Loss 0.409 \n",
      "(*) Entering Epoch 147 (13388.999 s)\n",
      "Epoch 147, Step 475 | Training Accuracy: 0.766 | Test Accuracy: 0.891 | Training Loss: 0.416 | Test Loss 0.268 \n",
      "Epoch 147, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.261 | Test Loss 0.440 \n",
      "Epoch 147, Step 1425 | Training Accuracy: 0.898 | Test Accuracy: 0.820 | Training Loss: 0.282 | Test Loss 0.370 \n",
      "Epoch 147, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.316 | Test Loss 0.420 \n",
      "Epoch 147, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.371 | Test Loss 0.429 \n",
      "Epoch 147, Step 2850 | Training Accuracy: 0.898 | Test Accuracy: 0.789 | Training Loss: 0.340 | Test Loss 0.429 \n",
      "Epoch 147, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.828 | Training Loss: 0.302 | Test Loss 0.374 \n",
      "Epoch 147, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.344 | Test Loss 0.426 \n",
      "(*) Entering Epoch 148 (13479.825 s)\n",
      "Epoch 148, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.415 | Test Loss 0.391 \n",
      "Epoch 148, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.883 | Training Loss: 0.391 | Test Loss 0.355 \n",
      "Epoch 148, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.294 | Test Loss 0.351 \n",
      "Epoch 148, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.275 | Test Loss 0.386 \n",
      "Epoch 148, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.836 | Training Loss: 0.294 | Test Loss 0.375 \n",
      "Epoch 148, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.859 | Training Loss: 0.363 | Test Loss 0.344 \n",
      "Epoch 148, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.750 | Training Loss: 0.362 | Test Loss 0.504 \n",
      "Epoch 148, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.301 | Test Loss 0.489 \n",
      "(*) Entering Epoch 149 (13570.652 s)\n",
      "Epoch 149, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.875 | Training Loss: 0.264 | Test Loss 0.273 \n",
      "Epoch 149, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.359 | Test Loss 0.414 \n",
      "Epoch 149, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.316 | Test Loss 0.378 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 149, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.338 | Test Loss 0.399 \n",
      "Epoch 149, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.852 | Training Loss: 0.363 | Test Loss 0.401 \n",
      "Epoch 149, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.883 | Training Loss: 0.334 | Test Loss 0.300 \n",
      "Epoch 149, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.371 | Test Loss 0.378 \n",
      "Epoch 149, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.385 | Test Loss 0.518 \n",
      "(*) Entering Epoch 150 (13661.521 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch150.ckpt-150\n",
      "Epoch 150, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.357 | Test Loss 0.400 \n",
      "Epoch 150, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.836 | Training Loss: 0.295 | Test Loss 0.385 \n",
      "Epoch 150, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.867 | Training Loss: 0.373 | Test Loss 0.383 \n",
      "Epoch 150, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.758 | Training Loss: 0.328 | Test Loss 0.434 \n",
      "Epoch 150, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.260 | Test Loss 0.378 \n",
      "Epoch 150, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.789 | Training Loss: 0.270 | Test Loss 0.495 \n",
      "Epoch 150, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.781 | Training Loss: 0.298 | Test Loss 0.418 \n",
      "Epoch 150, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.859 | Training Loss: 0.438 | Test Loss 0.332 \n",
      "(*) Entering Epoch 151 (13752.627 s)\n",
      "Epoch 151, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.323 | Test Loss 0.354 \n",
      "Epoch 151, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.315 | Test Loss 0.347 \n",
      "Epoch 151, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.867 | Training Loss: 0.355 | Test Loss 0.296 \n",
      "Epoch 151, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.875 | Training Loss: 0.382 | Test Loss 0.296 \n",
      "Epoch 151, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.316 | Test Loss 0.453 \n",
      "Epoch 151, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.812 | Training Loss: 0.341 | Test Loss 0.364 \n",
      "Epoch 151, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.378 | Test Loss 0.337 \n",
      "Epoch 151, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.374 | Test Loss 0.483 \n",
      "(*) Entering Epoch 152 (13843.363 s)\n",
      "Epoch 152, Step 475 | Training Accuracy: 0.812 | Test Accuracy: 0.859 | Training Loss: 0.349 | Test Loss 0.363 \n",
      "Epoch 152, Step 950 | Training Accuracy: 0.914 | Test Accuracy: 0.773 | Training Loss: 0.282 | Test Loss 0.436 \n",
      "Epoch 152, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.348 | Test Loss 0.393 \n",
      "Epoch 152, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.789 | Training Loss: 0.390 | Test Loss 0.378 \n",
      "Epoch 152, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.275 | Test Loss 0.496 \n",
      "Epoch 152, Step 2850 | Training Accuracy: 0.828 | Test Accuracy: 0.852 | Training Loss: 0.369 | Test Loss 0.310 \n",
      "Epoch 152, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.256 | Test Loss 0.517 \n",
      "Epoch 152, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.844 | Training Loss: 0.309 | Test Loss 0.350 \n",
      "(*) Entering Epoch 153 (13934.199 s)\n",
      "Epoch 153, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.836 | Training Loss: 0.310 | Test Loss 0.366 \n",
      "Epoch 153, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.331 | Test Loss 0.440 \n",
      "Epoch 153, Step 1425 | Training Accuracy: 0.891 | Test Accuracy: 0.781 | Training Loss: 0.288 | Test Loss 0.430 \n",
      "Epoch 153, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.339 | Test Loss 0.417 \n",
      "Epoch 153, Step 2375 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.337 | Test Loss 0.322 \n",
      "Epoch 153, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.366 | Test Loss 0.387 \n",
      "Epoch 153, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.302 | Test Loss 0.383 \n",
      "Epoch 153, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.331 | Test Loss 0.440 \n",
      "(*) Entering Epoch 154 (14025.138 s)\n",
      "Epoch 154, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.327 | Test Loss 0.440 \n",
      "Epoch 154, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.891 | Training Loss: 0.289 | Test Loss 0.273 \n",
      "Epoch 154, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.287 | Test Loss 0.381 \n",
      "Epoch 154, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.327 | Test Loss 0.336 \n",
      "Epoch 154, Step 2375 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.415 | Test Loss 0.325 \n",
      "Epoch 154, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.288 | Test Loss 0.460 \n",
      "Epoch 154, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.341 | Test Loss 0.388 \n",
      "Epoch 154, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.295 | Test Loss 0.387 \n",
      "(*) Entering Epoch 155 (14116.002 s)\n",
      "Epoch 155, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.266 | Test Loss 0.321 \n",
      "Epoch 155, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.836 | Training Loss: 0.363 | Test Loss 0.361 \n",
      "Epoch 155, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.331 | Test Loss 0.380 \n",
      "Epoch 155, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.336 | Test Loss 0.411 \n",
      "Epoch 155, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.789 | Training Loss: 0.306 | Test Loss 0.481 \n",
      "Epoch 155, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.906 | Training Loss: 0.371 | Test Loss 0.263 \n",
      "Epoch 155, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.391 | Test Loss 0.359 \n",
      "Epoch 155, Step 3800 | Training Accuracy: 0.766 | Test Accuracy: 0.820 | Training Loss: 0.424 | Test Loss 0.431 \n",
      "(*) Entering Epoch 156 (14206.859 s)\n",
      "Epoch 156, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.264 | Test Loss 0.353 \n",
      "Epoch 156, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.859 | Training Loss: 0.343 | Test Loss 0.353 \n",
      "Epoch 156, Step 1425 | Training Accuracy: 0.891 | Test Accuracy: 0.812 | Training Loss: 0.330 | Test Loss 0.425 \n",
      "Epoch 156, Step 1900 | Training Accuracy: 0.922 | Test Accuracy: 0.836 | Training Loss: 0.245 | Test Loss 0.406 \n",
      "Epoch 156, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.828 | Training Loss: 0.366 | Test Loss 0.444 \n",
      "Epoch 156, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.331 | Test Loss 0.388 \n",
      "Epoch 156, Step 3325 | Training Accuracy: 0.914 | Test Accuracy: 0.852 | Training Loss: 0.287 | Test Loss 0.371 \n",
      "Epoch 156, Step 3800 | Training Accuracy: 0.898 | Test Accuracy: 0.836 | Training Loss: 0.325 | Test Loss 0.369 \n",
      "(*) Entering Epoch 157 (14297.886 s)\n",
      "Epoch 157, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.781 | Training Loss: 0.335 | Test Loss 0.428 \n",
      "Epoch 157, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.773 | Training Loss: 0.376 | Test Loss 0.442 \n",
      "Epoch 157, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.844 | Training Loss: 0.429 | Test Loss 0.357 \n",
      "Epoch 157, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.875 | Training Loss: 0.399 | Test Loss 0.325 \n",
      "Epoch 157, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.424 | Test Loss 0.392 \n",
      "Epoch 157, Step 2850 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.299 | Test Loss 0.448 \n",
      "Epoch 157, Step 3325 | Training Accuracy: 0.914 | Test Accuracy: 0.852 | Training Loss: 0.276 | Test Loss 0.364 \n",
      "Epoch 157, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.286 | Test Loss 0.356 \n",
      "(*) Entering Epoch 158 (14388.805 s)\n",
      "Epoch 158, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.836 | Training Loss: 0.396 | Test Loss 0.445 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 158, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.781 | Training Loss: 0.326 | Test Loss 0.381 \n",
      "Epoch 158, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.727 | Training Loss: 0.328 | Test Loss 0.554 \n",
      "Epoch 158, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.363 | Test Loss 0.330 \n",
      "Epoch 158, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.321 | Test Loss 0.449 \n",
      "Epoch 158, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.290 | Test Loss 0.408 \n",
      "Epoch 158, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.844 | Training Loss: 0.419 | Test Loss 0.371 \n",
      "Epoch 158, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.308 | Test Loss 0.415 \n",
      "(*) Entering Epoch 159 (14479.628 s)\n",
      "Epoch 159, Step 475 | Training Accuracy: 0.922 | Test Accuracy: 0.750 | Training Loss: 0.219 | Test Loss 0.525 \n",
      "Epoch 159, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.335 | Test Loss 0.402 \n",
      "Epoch 159, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.388 | Test Loss 0.482 \n",
      "Epoch 159, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.345 | Test Loss 0.470 \n",
      "Epoch 159, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.367 | Test Loss 0.351 \n",
      "Epoch 159, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.311 | Test Loss 0.497 \n",
      "Epoch 159, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.280 | Test Loss 0.331 \n",
      "Epoch 159, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.308 | Test Loss 0.402 \n",
      "(*) Entering Epoch 160 (14570.555 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch160.ckpt-160\n",
      "Epoch 160, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.844 | Training Loss: 0.309 | Test Loss 0.341 \n",
      "Epoch 160, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.820 | Training Loss: 0.321 | Test Loss 0.457 \n",
      "Epoch 160, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.844 | Training Loss: 0.375 | Test Loss 0.347 \n",
      "Epoch 160, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.773 | Training Loss: 0.316 | Test Loss 0.503 \n",
      "Epoch 160, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.302 | Test Loss 0.378 \n",
      "Epoch 160, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.379 | Test Loss 0.420 \n",
      "Epoch 160, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.318 | Test Loss 0.354 \n",
      "Epoch 160, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.270 | Test Loss 0.448 \n",
      "(*) Entering Epoch 161 (14661.601 s)\n",
      "Epoch 161, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.836 | Training Loss: 0.311 | Test Loss 0.365 \n",
      "Epoch 161, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.758 | Training Loss: 0.286 | Test Loss 0.462 \n",
      "Epoch 161, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.311 | Test Loss 0.432 \n",
      "Epoch 161, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.852 | Training Loss: 0.386 | Test Loss 0.331 \n",
      "Epoch 161, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.291 | Test Loss 0.489 \n",
      "Epoch 161, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.875 | Training Loss: 0.313 | Test Loss 0.371 \n",
      "Epoch 161, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.844 | Training Loss: 0.269 | Test Loss 0.399 \n",
      "Epoch 161, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.346 | Test Loss 0.428 \n",
      "(*) Entering Epoch 162 (14752.458 s)\n",
      "Epoch 162, Step 475 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.417 | Test Loss 0.401 \n",
      "Epoch 162, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.789 | Training Loss: 0.384 | Test Loss 0.479 \n",
      "Epoch 162, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.812 | Training Loss: 0.374 | Test Loss 0.448 \n",
      "Epoch 162, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.325 | Test Loss 0.366 \n",
      "Epoch 162, Step 2375 | Training Accuracy: 0.922 | Test Accuracy: 0.836 | Training Loss: 0.239 | Test Loss 0.369 \n",
      "Epoch 162, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.828 | Training Loss: 0.322 | Test Loss 0.406 \n",
      "Epoch 162, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.335 | Test Loss 0.345 \n",
      "Epoch 162, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.781 | Training Loss: 0.296 | Test Loss 0.477 \n",
      "(*) Entering Epoch 163 (14843.295 s)\n",
      "Epoch 163, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.781 | Training Loss: 0.297 | Test Loss 0.452 \n",
      "Epoch 163, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.836 | Training Loss: 0.333 | Test Loss 0.370 \n",
      "Epoch 163, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.289 | Test Loss 0.468 \n",
      "Epoch 163, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.844 | Training Loss: 0.292 | Test Loss 0.358 \n",
      "Epoch 163, Step 2375 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.417 | Test Loss 0.356 \n",
      "Epoch 163, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.345 | Test Loss 0.444 \n",
      "Epoch 163, Step 3325 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.247 | Test Loss 0.406 \n",
      "Epoch 163, Step 3800 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.300 | Test Loss 0.364 \n",
      "(*) Entering Epoch 164 (14934.167 s)\n",
      "Epoch 164, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.828 | Training Loss: 0.277 | Test Loss 0.381 \n",
      "Epoch 164, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.291 | Test Loss 0.390 \n",
      "Epoch 164, Step 1425 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.324 | Test Loss 0.368 \n",
      "Epoch 164, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.294 | Test Loss 0.430 \n",
      "Epoch 164, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.373 | Test Loss 0.397 \n",
      "Epoch 164, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.844 | Training Loss: 0.353 | Test Loss 0.380 \n",
      "Epoch 164, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.820 | Training Loss: 0.301 | Test Loss 0.407 \n",
      "Epoch 164, Step 3800 | Training Accuracy: 0.914 | Test Accuracy: 0.828 | Training Loss: 0.236 | Test Loss 0.390 \n",
      "(*) Entering Epoch 165 (15024.992 s)\n",
      "Epoch 165, Step 475 | Training Accuracy: 0.922 | Test Accuracy: 0.883 | Training Loss: 0.241 | Test Loss 0.320 \n",
      "Epoch 165, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.404 | Test Loss 0.423 \n",
      "Epoch 165, Step 1425 | Training Accuracy: 0.898 | Test Accuracy: 0.844 | Training Loss: 0.266 | Test Loss 0.376 \n",
      "Epoch 165, Step 1900 | Training Accuracy: 0.914 | Test Accuracy: 0.758 | Training Loss: 0.238 | Test Loss 0.498 \n",
      "Epoch 165, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.781 | Training Loss: 0.306 | Test Loss 0.397 \n",
      "Epoch 165, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.264 | Test Loss 0.416 \n",
      "Epoch 165, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.883 | Training Loss: 0.290 | Test Loss 0.350 \n",
      "Epoch 165, Step 3800 | Training Accuracy: 0.922 | Test Accuracy: 0.789 | Training Loss: 0.187 | Test Loss 0.424 \n",
      "(*) Entering Epoch 166 (15115.775 s)\n",
      "Epoch 166, Step 475 | Training Accuracy: 0.867 | Test Accuracy: 0.844 | Training Loss: 0.322 | Test Loss 0.328 \n",
      "Epoch 166, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.282 | Test Loss 0.448 \n",
      "Epoch 166, Step 1425 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.363 | Test Loss 0.346 \n",
      "Epoch 166, Step 1900 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.341 | Test Loss 0.372 \n",
      "Epoch 166, Step 2375 | Training Accuracy: 0.797 | Test Accuracy: 0.820 | Training Loss: 0.381 | Test Loss 0.347 \n",
      "Epoch 166, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.321 | Test Loss 0.415 \n",
      "Epoch 166, Step 3325 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.358 | Test Loss 0.464 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 166, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.325 | Test Loss 0.385 \n",
      "(*) Entering Epoch 167 (15206.612 s)\n",
      "Epoch 167, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.867 | Training Loss: 0.281 | Test Loss 0.324 \n",
      "Epoch 167, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.805 | Training Loss: 0.320 | Test Loss 0.393 \n",
      "Epoch 167, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.268 | Test Loss 0.391 \n",
      "Epoch 167, Step 1900 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.267 | Test Loss 0.384 \n",
      "Epoch 167, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.820 | Training Loss: 0.320 | Test Loss 0.404 \n",
      "Epoch 167, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.852 | Training Loss: 0.314 | Test Loss 0.318 \n",
      "Epoch 167, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.805 | Training Loss: 0.442 | Test Loss 0.471 \n",
      "Epoch 167, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.328 | Test Loss 0.432 \n",
      "(*) Entering Epoch 168 (15297.493 s)\n",
      "Epoch 168, Step 475 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.310 | Test Loss 0.415 \n",
      "Epoch 168, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.883 | Training Loss: 0.373 | Test Loss 0.284 \n",
      "Epoch 168, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.766 | Training Loss: 0.338 | Test Loss 0.411 \n",
      "Epoch 168, Step 1900 | Training Accuracy: 0.922 | Test Accuracy: 0.836 | Training Loss: 0.247 | Test Loss 0.368 \n",
      "Epoch 168, Step 2375 | Training Accuracy: 0.914 | Test Accuracy: 0.836 | Training Loss: 0.217 | Test Loss 0.430 \n",
      "Epoch 168, Step 2850 | Training Accuracy: 0.883 | Test Accuracy: 0.781 | Training Loss: 0.286 | Test Loss 0.457 \n",
      "Epoch 168, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.820 | Training Loss: 0.281 | Test Loss 0.365 \n",
      "Epoch 168, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.805 | Training Loss: 0.360 | Test Loss 0.560 \n",
      "(*) Entering Epoch 169 (15388.413 s)\n",
      "Epoch 169, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.852 | Training Loss: 0.369 | Test Loss 0.335 \n",
      "Epoch 169, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.300 | Test Loss 0.356 \n",
      "Epoch 169, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.797 | Training Loss: 0.378 | Test Loss 0.412 \n",
      "Epoch 169, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.867 | Training Loss: 0.349 | Test Loss 0.301 \n",
      "Epoch 169, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.306 | Test Loss 0.485 \n",
      "Epoch 169, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.789 | Training Loss: 0.285 | Test Loss 0.471 \n",
      "Epoch 169, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.781 | Training Loss: 0.305 | Test Loss 0.456 \n",
      "Epoch 169, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.828 | Training Loss: 0.425 | Test Loss 0.372 \n",
      "(*) Entering Epoch 170 (15479.253 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch170.ckpt-170\n",
      "Epoch 170, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.310 | Test Loss 0.420 \n",
      "Epoch 170, Step 950 | Training Accuracy: 0.906 | Test Accuracy: 0.820 | Training Loss: 0.252 | Test Loss 0.376 \n",
      "Epoch 170, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.812 | Training Loss: 0.390 | Test Loss 0.402 \n",
      "Epoch 170, Step 1900 | Training Accuracy: 0.898 | Test Accuracy: 0.781 | Training Loss: 0.286 | Test Loss 0.440 \n",
      "Epoch 170, Step 2375 | Training Accuracy: 0.828 | Test Accuracy: 0.766 | Training Loss: 0.364 | Test Loss 0.455 \n",
      "Epoch 170, Step 2850 | Training Accuracy: 0.898 | Test Accuracy: 0.859 | Training Loss: 0.262 | Test Loss 0.303 \n",
      "Epoch 170, Step 3325 | Training Accuracy: 0.828 | Test Accuracy: 0.906 | Training Loss: 0.335 | Test Loss 0.251 \n",
      "Epoch 170, Step 3800 | Training Accuracy: 0.898 | Test Accuracy: 0.820 | Training Loss: 0.243 | Test Loss 0.404 \n",
      "(*) Entering Epoch 171 (15570.405 s)\n",
      "Epoch 171, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.773 | Training Loss: 0.345 | Test Loss 0.412 \n",
      "Epoch 171, Step 950 | Training Accuracy: 0.875 | Test Accuracy: 0.773 | Training Loss: 0.285 | Test Loss 0.456 \n",
      "Epoch 171, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.742 | Training Loss: 0.352 | Test Loss 0.484 \n",
      "Epoch 171, Step 1900 | Training Accuracy: 0.844 | Test Accuracy: 0.867 | Training Loss: 0.377 | Test Loss 0.428 \n",
      "Epoch 171, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.859 | Training Loss: 0.325 | Test Loss 0.336 \n",
      "Epoch 171, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.820 | Training Loss: 0.311 | Test Loss 0.387 \n",
      "Epoch 171, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.781 | Training Loss: 0.432 | Test Loss 0.541 \n",
      "Epoch 171, Step 3800 | Training Accuracy: 0.836 | Test Accuracy: 0.758 | Training Loss: 0.331 | Test Loss 0.508 \n",
      "(*) Entering Epoch 172 (15661.187 s)\n",
      "Epoch 172, Step 475 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.309 | Test Loss 0.429 \n",
      "Epoch 172, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.328 | Test Loss 0.420 \n",
      "Epoch 172, Step 1425 | Training Accuracy: 0.875 | Test Accuracy: 0.859 | Training Loss: 0.297 | Test Loss 0.372 \n",
      "Epoch 172, Step 1900 | Training Accuracy: 0.867 | Test Accuracy: 0.812 | Training Loss: 0.287 | Test Loss 0.391 \n",
      "Epoch 172, Step 2375 | Training Accuracy: 0.820 | Test Accuracy: 0.836 | Training Loss: 0.308 | Test Loss 0.335 \n",
      "Epoch 172, Step 2850 | Training Accuracy: 0.922 | Test Accuracy: 0.797 | Training Loss: 0.224 | Test Loss 0.462 \n",
      "Epoch 172, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.812 | Training Loss: 0.326 | Test Loss 0.413 \n",
      "Epoch 172, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.820 | Training Loss: 0.362 | Test Loss 0.432 \n",
      "(*) Entering Epoch 173 (15752.044 s)\n",
      "Epoch 173, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.828 | Training Loss: 0.245 | Test Loss 0.358 \n",
      "Epoch 173, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.844 | Training Loss: 0.319 | Test Loss 0.354 \n",
      "Epoch 173, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.341 | Test Loss 0.346 \n",
      "Epoch 173, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.828 | Training Loss: 0.310 | Test Loss 0.390 \n",
      "Epoch 173, Step 2375 | Training Accuracy: 0.812 | Test Accuracy: 0.828 | Training Loss: 0.433 | Test Loss 0.385 \n",
      "Epoch 173, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.310 | Test Loss 0.414 \n",
      "Epoch 173, Step 3325 | Training Accuracy: 0.859 | Test Accuracy: 0.812 | Training Loss: 0.360 | Test Loss 0.399 \n",
      "Epoch 173, Step 3800 | Training Accuracy: 0.812 | Test Accuracy: 0.750 | Training Loss: 0.389 | Test Loss 0.560 \n",
      "(*) Entering Epoch 174 (15842.968 s)\n",
      "Epoch 174, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.859 | Training Loss: 0.242 | Test Loss 0.283 \n",
      "Epoch 174, Step 950 | Training Accuracy: 0.922 | Test Accuracy: 0.812 | Training Loss: 0.250 | Test Loss 0.423 \n",
      "Epoch 174, Step 1425 | Training Accuracy: 0.773 | Test Accuracy: 0.852 | Training Loss: 0.386 | Test Loss 0.326 \n",
      "Epoch 174, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.844 | Training Loss: 0.271 | Test Loss 0.421 \n",
      "Epoch 174, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.332 | Test Loss 0.464 \n",
      "Epoch 174, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.337 | Test Loss 0.294 \n",
      "Epoch 174, Step 3325 | Training Accuracy: 0.852 | Test Accuracy: 0.828 | Training Loss: 0.296 | Test Loss 0.381 \n",
      "Epoch 174, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.750 | Training Loss: 0.284 | Test Loss 0.544 \n",
      "(*) Entering Epoch 175 (15933.828 s)\n",
      "Epoch 175, Step 475 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.302 | Test Loss 0.401 \n",
      "Epoch 175, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.773 | Training Loss: 0.275 | Test Loss 0.494 \n",
      "Epoch 175, Step 1425 | Training Accuracy: 0.906 | Test Accuracy: 0.852 | Training Loss: 0.245 | Test Loss 0.370 \n",
      "Epoch 175, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.820 | Training Loss: 0.427 | Test Loss 0.573 \n",
      "Epoch 175, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.316 | Test Loss 0.419 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 175, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.734 | Training Loss: 0.320 | Test Loss 0.488 \n",
      "Epoch 175, Step 3325 | Training Accuracy: 0.883 | Test Accuracy: 0.844 | Training Loss: 0.275 | Test Loss 0.330 \n",
      "Epoch 175, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.852 | Training Loss: 0.347 | Test Loss 0.332 \n",
      "(*) Entering Epoch 176 (16024.712 s)\n",
      "Epoch 176, Step 475 | Training Accuracy: 0.898 | Test Accuracy: 0.836 | Training Loss: 0.251 | Test Loss 0.358 \n",
      "Epoch 176, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.812 | Training Loss: 0.313 | Test Loss 0.407 \n",
      "Epoch 176, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.374 | Test Loss 0.387 \n",
      "Epoch 176, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.875 | Training Loss: 0.307 | Test Loss 0.397 \n",
      "Epoch 176, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.805 | Training Loss: 0.243 | Test Loss 0.428 \n",
      "Epoch 176, Step 2850 | Training Accuracy: 0.820 | Test Accuracy: 0.805 | Training Loss: 0.311 | Test Loss 0.476 \n",
      "Epoch 176, Step 3325 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.401 | Test Loss 0.352 \n",
      "Epoch 176, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.859 | Training Loss: 0.276 | Test Loss 0.341 \n",
      "(*) Entering Epoch 177 (16115.734 s)\n",
      "Epoch 177, Step 475 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.286 | Test Loss 0.381 \n",
      "Epoch 177, Step 950 | Training Accuracy: 0.922 | Test Accuracy: 0.836 | Training Loss: 0.222 | Test Loss 0.388 \n",
      "Epoch 177, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.336 | Test Loss 0.413 \n",
      "Epoch 177, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.327 | Test Loss 0.445 \n",
      "Epoch 177, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.867 | Training Loss: 0.278 | Test Loss 0.331 \n",
      "Epoch 177, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.395 | Test Loss 0.375 \n",
      "Epoch 177, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.812 | Training Loss: 0.290 | Test Loss 0.451 \n",
      "Epoch 177, Step 3800 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.267 | Test Loss 0.313 \n",
      "(*) Entering Epoch 178 (16206.562 s)\n",
      "Epoch 178, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.859 | Training Loss: 0.273 | Test Loss 0.425 \n",
      "Epoch 178, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.781 | Training Loss: 0.323 | Test Loss 0.444 \n",
      "Epoch 178, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.812 | Training Loss: 0.324 | Test Loss 0.431 \n",
      "Epoch 178, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.820 | Training Loss: 0.288 | Test Loss 0.414 \n",
      "Epoch 178, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.766 | Training Loss: 0.274 | Test Loss 0.557 \n",
      "Epoch 178, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.288 | Test Loss 0.343 \n",
      "Epoch 178, Step 3325 | Training Accuracy: 0.875 | Test Accuracy: 0.852 | Training Loss: 0.316 | Test Loss 0.394 \n",
      "Epoch 178, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.828 | Training Loss: 0.342 | Test Loss 0.411 \n",
      "(*) Entering Epoch 179 (16297.419 s)\n",
      "Epoch 179, Step 475 | Training Accuracy: 0.883 | Test Accuracy: 0.797 | Training Loss: 0.274 | Test Loss 0.424 \n",
      "Epoch 179, Step 950 | Training Accuracy: 0.844 | Test Accuracy: 0.844 | Training Loss: 0.390 | Test Loss 0.367 \n",
      "Epoch 179, Step 1425 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.293 | Test Loss 0.342 \n",
      "Epoch 179, Step 1900 | Training Accuracy: 0.852 | Test Accuracy: 0.797 | Training Loss: 0.318 | Test Loss 0.404 \n",
      "Epoch 179, Step 2375 | Training Accuracy: 0.867 | Test Accuracy: 0.742 | Training Loss: 0.267 | Test Loss 0.519 \n",
      "Epoch 179, Step 2850 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.328 | Test Loss 0.463 \n",
      "Epoch 179, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.836 | Training Loss: 0.368 | Test Loss 0.330 \n",
      "Epoch 179, Step 3800 | Training Accuracy: 0.883 | Test Accuracy: 0.797 | Training Loss: 0.306 | Test Loss 0.408 \n",
      "(*) Entering Epoch 180 (16388.330 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch180.ckpt-180\n",
      "Epoch 180, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.797 | Training Loss: 0.361 | Test Loss 0.459 \n",
      "Epoch 180, Step 950 | Training Accuracy: 0.820 | Test Accuracy: 0.828 | Training Loss: 0.384 | Test Loss 0.471 \n",
      "Epoch 180, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.797 | Training Loss: 0.411 | Test Loss 0.408 \n",
      "Epoch 180, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.274 | Test Loss 0.352 \n",
      "Epoch 180, Step 2375 | Training Accuracy: 0.781 | Test Accuracy: 0.852 | Training Loss: 0.415 | Test Loss 0.397 \n",
      "Epoch 180, Step 2850 | Training Accuracy: 0.852 | Test Accuracy: 0.867 | Training Loss: 0.335 | Test Loss 0.378 \n",
      "Epoch 180, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.852 | Training Loss: 0.354 | Test Loss 0.386 \n",
      "Epoch 180, Step 3800 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.377 | Test Loss 0.470 \n",
      "(*) Entering Epoch 181 (16479.512 s)\n",
      "Epoch 181, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.789 | Training Loss: 0.277 | Test Loss 0.418 \n",
      "Epoch 181, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.867 | Training Loss: 0.272 | Test Loss 0.349 \n",
      "Epoch 181, Step 1425 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.348 | Test Loss 0.352 \n",
      "Epoch 181, Step 1900 | Training Accuracy: 0.859 | Test Accuracy: 0.836 | Training Loss: 0.321 | Test Loss 0.402 \n",
      "Epoch 181, Step 2375 | Training Accuracy: 0.898 | Test Accuracy: 0.766 | Training Loss: 0.249 | Test Loss 0.440 \n",
      "Epoch 181, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.323 | Test Loss 0.382 \n",
      "Epoch 181, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.781 | Training Loss: 0.308 | Test Loss 0.438 \n",
      "Epoch 181, Step 3800 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.299 | Test Loss 0.439 \n",
      "(*) Entering Epoch 182 (16570.383 s)\n",
      "Epoch 182, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.773 | Training Loss: 0.312 | Test Loss 0.443 \n",
      "Epoch 182, Step 950 | Training Accuracy: 0.852 | Test Accuracy: 0.805 | Training Loss: 0.318 | Test Loss 0.417 \n",
      "Epoch 182, Step 1425 | Training Accuracy: 0.820 | Test Accuracy: 0.883 | Training Loss: 0.382 | Test Loss 0.347 \n",
      "Epoch 182, Step 1900 | Training Accuracy: 0.875 | Test Accuracy: 0.789 | Training Loss: 0.306 | Test Loss 0.485 \n",
      "Epoch 182, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.805 | Training Loss: 0.341 | Test Loss 0.415 \n",
      "Epoch 182, Step 2850 | Training Accuracy: 0.836 | Test Accuracy: 0.836 | Training Loss: 0.344 | Test Loss 0.353 \n",
      "Epoch 182, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.789 | Training Loss: 0.260 | Test Loss 0.479 \n",
      "Epoch 182, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.750 | Training Loss: 0.354 | Test Loss 0.595 \n",
      "(*) Entering Epoch 183 (16661.193 s)\n",
      "Epoch 183, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.859 | Training Loss: 0.332 | Test Loss 0.408 \n",
      "Epoch 183, Step 950 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.314 | Test Loss 0.517 \n",
      "Epoch 183, Step 1425 | Training Accuracy: 0.883 | Test Accuracy: 0.789 | Training Loss: 0.303 | Test Loss 0.439 \n",
      "Epoch 183, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.781 | Training Loss: 0.337 | Test Loss 0.498 \n",
      "Epoch 183, Step 2375 | Training Accuracy: 0.883 | Test Accuracy: 0.820 | Training Loss: 0.332 | Test Loss 0.475 \n",
      "Epoch 183, Step 2850 | Training Accuracy: 0.859 | Test Accuracy: 0.859 | Training Loss: 0.314 | Test Loss 0.371 \n",
      "Epoch 183, Step 3325 | Training Accuracy: 0.836 | Test Accuracy: 0.828 | Training Loss: 0.360 | Test Loss 0.379 \n",
      "Epoch 183, Step 3800 | Training Accuracy: 0.867 | Test Accuracy: 0.797 | Training Loss: 0.262 | Test Loss 0.427 \n",
      "(*) Entering Epoch 184 (16752.116 s)\n",
      "Epoch 184, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.797 | Training Loss: 0.374 | Test Loss 0.438 \n",
      "Epoch 184, Step 950 | Training Accuracy: 0.867 | Test Accuracy: 0.820 | Training Loss: 0.317 | Test Loss 0.405 \n",
      "Epoch 184, Step 1425 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.399 | Test Loss 0.395 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 184, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.406 | Test Loss 0.426 \n",
      "Epoch 184, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.812 | Training Loss: 0.279 | Test Loss 0.422 \n",
      "Epoch 184, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.852 | Training Loss: 0.273 | Test Loss 0.342 \n",
      "Epoch 184, Step 3325 | Training Accuracy: 0.898 | Test Accuracy: 0.805 | Training Loss: 0.238 | Test Loss 0.414 \n",
      "Epoch 184, Step 3800 | Training Accuracy: 0.891 | Test Accuracy: 0.805 | Training Loss: 0.306 | Test Loss 0.380 \n",
      "(*) Entering Epoch 185 (16842.980 s)\n",
      "Epoch 185, Step 475 | Training Accuracy: 0.906 | Test Accuracy: 0.867 | Training Loss: 0.253 | Test Loss 0.335 \n",
      "Epoch 185, Step 950 | Training Accuracy: 0.883 | Test Accuracy: 0.812 | Training Loss: 0.278 | Test Loss 0.409 \n",
      "Epoch 185, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.758 | Training Loss: 0.306 | Test Loss 0.498 \n",
      "Epoch 185, Step 1900 | Training Accuracy: 0.891 | Test Accuracy: 0.828 | Training Loss: 0.261 | Test Loss 0.343 \n",
      "Epoch 185, Step 2375 | Training Accuracy: 0.875 | Test Accuracy: 0.797 | Training Loss: 0.306 | Test Loss 0.392 \n"
     ]
    }
   ],
   "source": [
    "train(config)#, restore = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(*) Entering Epoch 0 (11.676 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch0.ckpt-0\n",
      "Epoch 0, Step 475 | Training Accuracy: 0.609 | Test Accuracy: 0.562 | Training Loss: 0.665 | Test Loss 0.670 \n",
      "Epoch 0, Step 950 | Training Accuracy: 0.734 | Test Accuracy: 0.555 | Training Loss: 0.610 | Test Loss 0.665 \n",
      "Epoch 0, Step 1425 | Training Accuracy: 0.664 | Test Accuracy: 0.539 | Training Loss: 0.605 | Test Loss 0.675 \n",
      "Epoch 0, Step 1900 | Training Accuracy: 0.664 | Test Accuracy: 0.633 | Training Loss: 0.612 | Test Loss 0.646 \n",
      "Epoch 0, Step 2375 | Training Accuracy: 0.648 | Test Accuracy: 0.711 | Training Loss: 0.585 | Test Loss 0.637 \n",
      "Epoch 0, Step 2850 | Training Accuracy: 0.742 | Test Accuracy: 0.766 | Training Loss: 0.510 | Test Loss 0.562 \n",
      "Epoch 0, Step 3325 | Training Accuracy: 0.672 | Test Accuracy: 0.641 | Training Loss: 0.572 | Test Loss 0.632 \n",
      "Epoch 0, Step 3800 | Training Accuracy: 0.703 | Test Accuracy: 0.656 | Training Loss: 0.547 | Test Loss 0.598 \n",
      "(*) Entering Epoch 1 (146.900 s)\n",
      "Epoch 1, Step 475 | Training Accuracy: 0.719 | Test Accuracy: 0.711 | Training Loss: 0.543 | Test Loss 0.550 \n",
      "Epoch 1, Step 950 | Training Accuracy: 0.703 | Test Accuracy: 0.688 | Training Loss: 0.516 | Test Loss 0.569 \n",
      "Epoch 1, Step 1425 | Training Accuracy: 0.742 | Test Accuracy: 0.727 | Training Loss: 0.519 | Test Loss 0.534 \n",
      "Epoch 1, Step 1900 | Training Accuracy: 0.789 | Test Accuracy: 0.688 | Training Loss: 0.494 | Test Loss 0.608 \n",
      "Epoch 1, Step 2375 | Training Accuracy: 0.703 | Test Accuracy: 0.766 | Training Loss: 0.518 | Test Loss 0.452 \n",
      "Epoch 1, Step 2850 | Training Accuracy: 0.758 | Test Accuracy: 0.711 | Training Loss: 0.525 | Test Loss 0.567 \n",
      "Epoch 1, Step 3325 | Training Accuracy: 0.680 | Test Accuracy: 0.758 | Training Loss: 0.586 | Test Loss 0.534 \n",
      "Epoch 1, Step 3800 | Training Accuracy: 0.695 | Test Accuracy: 0.836 | Training Loss: 0.557 | Test Loss 0.441 \n",
      "(*) Entering Epoch 2 (280.963 s)\n",
      "Epoch 2, Step 475 | Training Accuracy: 0.734 | Test Accuracy: 0.734 | Training Loss: 0.522 | Test Loss 0.524 \n",
      "Epoch 2, Step 950 | Training Accuracy: 0.727 | Test Accuracy: 0.742 | Training Loss: 0.522 | Test Loss 0.566 \n",
      "Epoch 2, Step 1425 | Training Accuracy: 0.797 | Test Accuracy: 0.766 | Training Loss: 0.468 | Test Loss 0.501 \n",
      "Epoch 2, Step 1900 | Training Accuracy: 0.758 | Test Accuracy: 0.758 | Training Loss: 0.511 | Test Loss 0.492 \n",
      "Epoch 2, Step 2375 | Training Accuracy: 0.727 | Test Accuracy: 0.781 | Training Loss: 0.588 | Test Loss 0.451 \n",
      "Epoch 2, Step 2850 | Training Accuracy: 0.727 | Test Accuracy: 0.719 | Training Loss: 0.539 | Test Loss 0.551 \n",
      "Epoch 2, Step 3325 | Training Accuracy: 0.734 | Test Accuracy: 0.758 | Training Loss: 0.540 | Test Loss 0.481 \n",
      "Epoch 2, Step 3800 | Training Accuracy: 0.797 | Test Accuracy: 0.695 | Training Loss: 0.450 | Test Loss 0.589 \n",
      "(*) Entering Epoch 3 (414.921 s)\n",
      "Epoch 3, Step 475 | Training Accuracy: 0.727 | Test Accuracy: 0.734 | Training Loss: 0.485 | Test Loss 0.537 \n",
      "Epoch 3, Step 950 | Training Accuracy: 0.766 | Test Accuracy: 0.781 | Training Loss: 0.466 | Test Loss 0.485 \n",
      "Epoch 3, Step 1425 | Training Accuracy: 0.719 | Test Accuracy: 0.758 | Training Loss: 0.525 | Test Loss 0.471 \n",
      "Epoch 3, Step 1900 | Training Accuracy: 0.781 | Test Accuracy: 0.812 | Training Loss: 0.417 | Test Loss 0.446 \n",
      "Epoch 3, Step 2375 | Training Accuracy: 0.750 | Test Accuracy: 0.703 | Training Loss: 0.500 | Test Loss 0.547 \n",
      "Epoch 3, Step 2850 | Training Accuracy: 0.781 | Test Accuracy: 0.781 | Training Loss: 0.487 | Test Loss 0.445 \n",
      "Epoch 3, Step 3325 | Training Accuracy: 0.773 | Test Accuracy: 0.797 | Training Loss: 0.491 | Test Loss 0.478 \n",
      "Epoch 3, Step 3800 | Training Accuracy: 0.734 | Test Accuracy: 0.828 | Training Loss: 0.496 | Test Loss 0.362 \n",
      "(*) Entering Epoch 4 (548.802 s)\n",
      "Epoch 4, Step 475 | Training Accuracy: 0.805 | Test Accuracy: 0.773 | Training Loss: 0.469 | Test Loss 0.455 \n",
      "Epoch 4, Step 950 | Training Accuracy: 0.750 | Test Accuracy: 0.805 | Training Loss: 0.506 | Test Loss 0.444 \n",
      "Epoch 4, Step 1425 | Training Accuracy: 0.695 | Test Accuracy: 0.781 | Training Loss: 0.495 | Test Loss 0.462 \n",
      "Epoch 4, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.836 | Training Loss: 0.362 | Test Loss 0.401 \n",
      "Epoch 4, Step 2375 | Training Accuracy: 0.859 | Test Accuracy: 0.773 | Training Loss: 0.387 | Test Loss 0.447 \n",
      "Epoch 4, Step 2850 | Training Accuracy: 0.805 | Test Accuracy: 0.828 | Training Loss: 0.422 | Test Loss 0.377 \n",
      "Epoch 4, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.828 | Training Loss: 0.454 | Test Loss 0.421 \n",
      "Epoch 4, Step 3800 | Training Accuracy: 0.750 | Test Accuracy: 0.820 | Training Loss: 0.525 | Test Loss 0.357 \n",
      "(*) Entering Epoch 5 (682.715 s)\n",
      "Epoch 5, Step 475 | Training Accuracy: 0.836 | Test Accuracy: 0.781 | Training Loss: 0.386 | Test Loss 0.474 \n",
      "Epoch 5, Step 950 | Training Accuracy: 0.742 | Test Accuracy: 0.781 | Training Loss: 0.458 | Test Loss 0.458 \n",
      "Epoch 5, Step 1425 | Training Accuracy: 0.812 | Test Accuracy: 0.820 | Training Loss: 0.466 | Test Loss 0.394 \n",
      "Epoch 5, Step 1900 | Training Accuracy: 0.812 | Test Accuracy: 0.797 | Training Loss: 0.426 | Test Loss 0.430 \n",
      "Epoch 5, Step 2375 | Training Accuracy: 0.789 | Test Accuracy: 0.797 | Training Loss: 0.408 | Test Loss 0.434 \n",
      "Epoch 5, Step 2850 | Training Accuracy: 0.766 | Test Accuracy: 0.789 | Training Loss: 0.510 | Test Loss 0.400 \n",
      "Epoch 5, Step 3325 | Training Accuracy: 0.805 | Test Accuracy: 0.789 | Training Loss: 0.442 | Test Loss 0.399 \n",
      "Epoch 5, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.750 | Training Loss: 0.373 | Test Loss 0.498 \n",
      "(*) Entering Epoch 6 (816.670 s)\n",
      "Epoch 6, Step 475 | Training Accuracy: 0.797 | Test Accuracy: 0.789 | Training Loss: 0.413 | Test Loss 0.458 *\n",
      "Epoch 6, Step 950 | Training Accuracy: 0.773 | Test Accuracy: 0.750 | Training Loss: 0.433 | Test Loss 0.443 \n",
      "Epoch 6, Step 1425 | Training Accuracy: 0.734 | Test Accuracy: 0.836 | Training Loss: 0.485 | Test Loss 0.400 *\n",
      "Epoch 6, Step 1900 | Training Accuracy: 0.750 | Test Accuracy: 0.789 | Training Loss: 0.451 | Test Loss 0.411 \n",
      "Epoch 6, Step 2375 | Training Accuracy: 0.836 | Test Accuracy: 0.789 | Training Loss: 0.390 | Test Loss 0.479 \n",
      "Epoch 6, Step 2850 | Training Accuracy: 0.844 | Test Accuracy: 0.750 | Training Loss: 0.424 | Test Loss 0.514 \n",
      "Epoch 6, Step 3325 | Training Accuracy: 0.789 | Test Accuracy: 0.812 | Training Loss: 0.417 | Test Loss 0.380 \n",
      "Epoch 6, Step 3800 | Training Accuracy: 0.773 | Test Accuracy: 0.812 | Training Loss: 0.439 | Test Loss 0.387 \n",
      "(*) Entering Epoch 7 (951.275 s)\n",
      "Epoch 7, Step 475 | Training Accuracy: 0.766 | Test Accuracy: 0.797 | Training Loss: 0.428 | Test Loss 0.472 \n",
      "Epoch 7, Step 950 | Training Accuracy: 0.859 | Test Accuracy: 0.797 | Training Loss: 0.308 | Test Loss 0.425 \n",
      "Epoch 7, Step 1425 | Training Accuracy: 0.773 | Test Accuracy: 0.852 | Training Loss: 0.461 | Test Loss 0.428 *\n",
      "Epoch 7, Step 1900 | Training Accuracy: 0.758 | Test Accuracy: 0.820 | Training Loss: 0.471 | Test Loss 0.406 \n",
      "Epoch 7, Step 2375 | Training Accuracy: 0.734 | Test Accuracy: 0.828 | Training Loss: 0.465 | Test Loss 0.369 \n",
      "Epoch 7, Step 2850 | Training Accuracy: 0.781 | Test Accuracy: 0.875 | Training Loss: 0.419 | Test Loss 0.322 *\n",
      "Epoch 7, Step 3325 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.371 | Test Loss 0.417 \n",
      "Epoch 7, Step 3800 | Training Accuracy: 0.820 | Test Accuracy: 0.812 | Training Loss: 0.402 | Test Loss 0.392 \n",
      "(*) Entering Epoch 8 (1085.909 s)\n",
      "Epoch 8, Step 475 | Training Accuracy: 0.844 | Test Accuracy: 0.836 | Training Loss: 0.352 | Test Loss 0.405 \n",
      "Epoch 8, Step 950 | Training Accuracy: 0.789 | Test Accuracy: 0.766 | Training Loss: 0.416 | Test Loss 0.470 \n",
      "Epoch 8, Step 1425 | Training Accuracy: 0.781 | Test Accuracy: 0.820 | Training Loss: 0.446 | Test Loss 0.422 \n",
      "Epoch 8, Step 1900 | Training Accuracy: 0.766 | Test Accuracy: 0.797 | Training Loss: 0.427 | Test Loss 0.441 \n",
      "Epoch 8, Step 2375 | Training Accuracy: 0.742 | Test Accuracy: 0.766 | Training Loss: 0.506 | Test Loss 0.461 \n",
      "Epoch 8, Step 2850 | Training Accuracy: 0.773 | Test Accuracy: 0.859 | Training Loss: 0.465 | Test Loss 0.374 \n",
      "Epoch 8, Step 3325 | Training Accuracy: 0.750 | Test Accuracy: 0.750 | Training Loss: 0.480 | Test Loss 0.510 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 8, Step 3800 | Training Accuracy: 0.828 | Test Accuracy: 0.875 | Training Loss: 0.387 | Test Loss 0.357 \n",
      "(*) Entering Epoch 9 (1219.827 s)\n",
      "Epoch 9, Step 475 | Training Accuracy: 0.828 | Test Accuracy: 0.828 | Training Loss: 0.394 | Test Loss 0.364 \n",
      "Epoch 9, Step 950 | Training Accuracy: 0.836 | Test Accuracy: 0.805 | Training Loss: 0.418 | Test Loss 0.408 \n",
      "Epoch 9, Step 1425 | Training Accuracy: 0.844 | Test Accuracy: 0.789 | Training Loss: 0.366 | Test Loss 0.465 \n",
      "Epoch 9, Step 1900 | Training Accuracy: 0.820 | Test Accuracy: 0.820 | Training Loss: 0.396 | Test Loss 0.405 \n",
      "Epoch 9, Step 2375 | Training Accuracy: 0.758 | Test Accuracy: 0.781 | Training Loss: 0.455 | Test Loss 0.444 \n",
      "Epoch 9, Step 2850 | Training Accuracy: 0.789 | Test Accuracy: 0.750 | Training Loss: 0.420 | Test Loss 0.466 \n",
      "Epoch 9, Step 3325 | Training Accuracy: 0.797 | Test Accuracy: 0.852 | Training Loss: 0.423 | Test Loss 0.376 \n",
      "Epoch 9, Step 3800 | Training Accuracy: 0.789 | Test Accuracy: 0.844 | Training Loss: 0.435 | Test Loss 0.372 \n",
      "(*) Entering Epoch 10 (1353.732 s)\n",
      "Graph saved to file: checkpoints/biRNN_kst_rho0_epoch10.ckpt-10\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-6-c10c650b3059>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m#, restore = True)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-5-0e3568aabfe4>\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(config, restore)\u001b[0m\n\u001b[1;32m     40\u001b[0m                 feed_dict_train = {biRNN.inputs: x_train.values, biRNN.targets: y_train.values, biRNN.keep_prob: config.keep_prob, \n\u001b[1;32m     41\u001b[0m                                    biRNN.training_phase: True}\n\u001b[0;32m---> 42\u001b[0;31m                 \u001b[0mt_op\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbiRNN\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_op\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfeed_dict_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m                 \u001b[0mstep\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/jtan/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m    894\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    895\u001b[0m       result = self._run(None, fetches, feed_dict, options_ptr,\n\u001b[0;32m--> 896\u001b[0;31m                          run_metadata_ptr)\n\u001b[0m\u001b[1;32m    897\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mrun_metadata\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    898\u001b[0m         \u001b[0mproto_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_session\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_GetBuffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrun_metadata_ptr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/jtan/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run\u001b[0;34m(self, handle, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1122\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfinal_fetches\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mfinal_targets\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mfeed_dict_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1123\u001b[0m       results = self._do_run(handle, final_targets, final_fetches,\n\u001b[0;32m-> 1124\u001b[0;31m                              feed_dict_tensor, options, run_metadata)\n\u001b[0m\u001b[1;32m   1125\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1126\u001b[0m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/jtan/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_run\u001b[0;34m(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1277\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mhandle\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1278\u001b[0m       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n\u001b[0;32m-> 1279\u001b[0;31m                            options, run_metadata)\n\u001b[0m\u001b[1;32m   1280\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1281\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_prun_fn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_session\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeeds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetches\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/jtan/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1283\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1284\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1285\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1286\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOpError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1287\u001b[0m       \u001b[0mmessage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/home/jtan/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run_fn\u001b[0;34m(session, feed_dict, fetch_list, target_list, options, run_metadata)\u001b[0m\n\u001b[1;32m   1262\u001b[0m           return tf_session.TF_Run(session, options,\n\u001b[1;32m   1263\u001b[0m                                    \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_list\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1264\u001b[0;31m                                    status, run_metadata)\n\u001b[0m\u001b[1;32m   1265\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1266\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_prun_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "train(config)#, restore = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'BiRNN' object has no attribute 'ema'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-7-34612811a47f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mckpt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_checkpoint_state\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectories\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheckpoints\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mbiRNN\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBiRNN\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtraining\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mnetwork_output\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbiRNN\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mckpt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectories\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheckpoints\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'{}_{}_y_pred.npy'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mchannel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnetwork_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-4-4874e1b61e56>\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, ckpt, metaGraph)\u001b[0m\n\u001b[1;32m    109\u001b[0m         \u001b[0;31m# Restore the moving average version of the learned variables for eval.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m         \u001b[0;31m#variable_averages = tf.train.ExponentialMovingAverage(config.ema_decay)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 111\u001b[0;31m         \u001b[0mvariables_to_restore\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mema\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvariables_to_restore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    112\u001b[0m         \u001b[0;31m#variables_to_restore = variable_averages.variables_to_restore()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    113\u001b[0m         \u001b[0msaver\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSaver\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvariables_to_restore\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'BiRNN' object has no attribute 'ema'"
     ]
    }
   ],
   "source": [
    "ckpt = tf.train.get_checkpoint_state(directories.checkpoints)\n",
    "biRNN = BiRNN(config, training = False)\n",
    "network_output = biRNN.predict(ckpt)\n",
    "\n",
    "np.save(os.path.join(directories.checkpoints, '{}_{}_y_pred.npy'.format(config.channel, config.mode)), network_output)\n",
    "np.save(os.path.join(directories.checkpoints, '{}_{}_y_test.npy'.format(config.channel, config.mode)), df_y_test.values)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
